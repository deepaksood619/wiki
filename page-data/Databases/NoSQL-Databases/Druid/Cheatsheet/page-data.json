{
    "componentChunkName": "component---node-modules-gatsby-theme-primer-wiki-src-templates-post-query-js",
    "path": "/Databases/NoSQL-Databases/Druid/Cheatsheet/",
    "result": {"data":{"mdx":{"id":"eee7da20-c6a7-52ff-877b-f3b107a70cd2","tableOfContents":{"items":[{"url":"#cheatsheet","title":"Cheatsheet"}]},"fields":{"title":"Cheatsheet","slug":"/Databases/NoSQL-Databases/Druid/Cheatsheet/","url":"https://deepaksood619.github.io/wiki/wiki/Databases/NoSQL-Databases/Druid/Cheatsheet/","editUrl":"https://github.com/deepaksood619/wiki/tree/main/Databases/NoSQL-Databases/Druid/Cheatsheet.md","lastUpdatedAt":"2022-12-14T06:59:27.000Z","lastUpdated":"12/14/2022","gitCreatedAt":"2022-12-11T06:36:19.000Z","shouldShowTitle":false},"frontmatter":{"title":"","description":null,"imageAlt":null,"tags":[],"date":null,"dateModified":null,"language":null,"seoTitle":null,"image":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"cheatsheet\"\n  }, \"Cheatsheet\"), mdx(\"p\", null, \"Created: 2019-11-20 00:28:15 +0500\"), mdx(\"p\", null, \"Modified: 2019-11-20 00:28:52 +0500\"), mdx(\"hr\", null), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Common\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/status\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns the Druid version, loaded extens\\xADions, memory used, total memory and other useful inform\\xADation about the process.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/statu\\xADs/h\\xADealth\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Always returns a boolean \\\"\\xADtru\\xADe\\\" value with a 200 OK response, useful for automated health checks.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/statu\\xADs/p\\xADrop\\xADerties\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns the current config\\xADuration properties of the process.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"These endpoints are supported by all processes.\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })))), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Master Server\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Coordi\\xADnator - Leadership\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/leader\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns the current leader Coordi\\xADnator of the cluster.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/is\\xADLeader\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns a JSON object with field \\\"\\xADlea\\xADder\\xAD\\\", either true or false\")))), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Master Server\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Segment Loading\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/lo\\xADads\\xADtatus\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns the percentage of segments actually loaded in the cluster\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/lo\\xADads\\xADtat\\xADus?\\xADsimple\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns the number of segments left to load in each tier\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/lo\\xADadqueue\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns the ids of segments to load and drop for each Historical process.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/lo\\xADadq\\xADueu\\xADe?s\\xADimple\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns the number of segments to load and drop\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/lo\\xADadq\\xADueu\\xADe?full\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns the serialized JSON of segments to load and drop for each Historical process.\")))), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Master Server\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Metadata info\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/me\\xADtad\\xAData\\xAD/da\\xADtas\\xADources\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns a list of the names of enabled dataso\\xADurces in the cluster.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/me\\xADtad\\xAData\\xAD/da\\xADtas\\xADour\\xADces\\xAD?in\\xADclu\\xADdeD\\xADisabled\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns a list of the names of enabled and disabled dataso\\xADurces in the cluster.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/me\\xADtad\\xAData\\xAD/da\\xADtas\\xADour\\xADces\\xAD?full\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns a list of all enabled dataso\\xADurces with all metadata about those dataso\\xADurces as stored in the metadata store.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/me\\xADtad\\xAData\\xAD/da\\xADtas\\xADour\\xADces\\xAD/{d\\xAData\\xADSou\\xADrce\\xADName}\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns full metadata for a datasource as stored in the metadata store.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/me\\xADtad\\xAData\\xAD/da\\xADtas\\xADour\\xADces\\xAD/{d\\xAData\\xADSou\\xADrce\\xADNam\\xADe}/\\xADseg\\xADments\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns a list of all segments for a datasource as stored in the metadata store.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/me\\xADtad\\xAData\\xAD/da\\xADtas\\xADour\\xADces\\xAD/{d\\xAData\\xADSou\\xADrce\\xADNam\\xADe}/\\xADseg\\xADmen\\xADts?full\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns a list of all segments for a datasource with the full segment metadata as stored in the metadata store.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/me\\xADtad\\xAData\\xAD/da\\xADtas\\xADour\\xADces\\xAD/{d\\xAData\\xADSou\\xADrce\\xADNam\\xADe}/\\xADseg\\xADmen\\xADts/\\xAD{se\\xADgme\\xADntId}\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns full segment metadata for a specific segment as stored in the metadata store.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"POST\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/me\\xADtad\\xAData\\xAD/da\\xADtas\\xADour\\xADces\\xAD/{d\\xAData\\xADSou\\xADrce\\xADNam\\xADe}/\\xADseg\\xADments\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns a list of all segments, overla\\xADpping with any of given intervals\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"POST\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/me\\xADtad\\xAData\\xAD/da\\xADtas\\xADour\\xADces\\xAD/{d\\xAData\\xADSou\\xADrce\\xADNam\\xADe}/\\xADseg\\xADmen\\xADts?full\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns a list of all segments, overla\\xADpping with any of given intervals, for a datasource with the full segment metadata\")))), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Master Server\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Dataso\\xADurces\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/da\\xADtas\\xADources\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns a list of datasource names found in the cluster.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/da\\xADtas\\xADour\\xADces\\xAD?simple\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns a list of JSON objects containing the name and properties of dataso\\xADurces found in the cluster.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/da\\xADtas\\xADour\\xADces\\xAD?full\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns a list of datasource names found in the cluster with all metadata about those dataso\\xADurces.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/da\\xADtas\\xADour\\xADces\\xAD/{d\\xAData\\xADSou\\xADrce\\xADName}\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns a JSON object containing the name and properties of a datasource\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/da\\xADtas\\xADour\\xADces\\xAD/{d\\xAData\\xADSou\\xADrce\\xADNam\\xADe}?full\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns full metadata for a datasource .\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/da\\xADtas\\xADour\\xADces\\xAD/{d\\xAData\\xADSou\\xADrce\\xADNam\\xADe}/\\xADint\\xADervals\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns full metadata for a datasource .\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/da\\xADtas\\xADour\\xADces\\xAD/{d\\xAData\\xADSou\\xADrce\\xADNam\\xADe}/\\xADint\\xADervals\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns a set of segment intervals.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/da\\xADtas\\xADour\\xADces\\xAD/{d\\xAData\\xADSou\\xADrce\\xADNam\\xADe}/\\xADint\\xADerv\\xADals\\xAD?simple\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns a map of an interval to a JSON object containing the total byte size of segments and number of segments for that interval.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/da\\xADtas\\xADour\\xADces\\xAD/{d\\xAData\\xADSou\\xADrce\\xADNam\\xADe}/\\xADint\\xADerv\\xADals\\xAD?full\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns a map of an interval to a map of segment metadata to a set of server names that contain the segment for that interval.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/da\\xADtas\\xADour\\xADces\\xAD/{d\\xAData\\xADSou\\xADrce\\xADNam\\xADe}/\\xADint\\xADerv\\xADals\\xAD/{i\\xADnte\\xADrval}\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns a set of segment ids for an interval.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/da\\xADtas\\xADour\\xADces\\xAD/{d\\xAData\\xADSou\\xADrce\\xADNam\\xADe}/\\xADint\\xADerv\\xADals\\xAD/{i\\xADnte\\xADrva\\xADl}?\\xADsimple\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns a map of segment intervals contained within the specified interval to a JSON object\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/da\\xADtas\\xADour\\xADces\\xAD/{d\\xAData\\xADSou\\xADrce\\xADNam\\xADe}/\\xADint\\xADerv\\xADals\\xAD/{i\\xADnte\\xADrva\\xADl}?full\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns a map of segment intervals contained within the specified interval to a map of segment metadata to a set of server names that contain the segment for an interval.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/da\\xADtas\\xADour\\xADces\\xAD/{d\\xAData\\xADSou\\xADrce\\xADNam\\xADe}/\\xADint\\xADerv\\xADals\\xAD/{i\\xADnte\\xADrva\\xADl}/\\xADser\\xADverview\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns a map of segment intervals contained within the specified interval to inform\\xADation about the servers that contain the segment for an interval.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/da\\xADtas\\xADour\\xADces\\xAD/{d\\xAData\\xADSou\\xADrce\\xADNam\\xADe}/\\xADseg\\xADments\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns a list of all segments for a datasource in the cluster.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/da\\xADtas\\xADour\\xADces\\xAD/{d\\xAData\\xADSou\\xADrce\\xADNam\\xADe}/\\xADseg\\xADmen\\xADts?full\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns a list of all segments for a datasource in the cluster with the full segment metadata.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/da\\xADtas\\xADour\\xADces\\xAD/{d\\xAData\\xADSou\\xADrce\\xADNam\\xADe}/\\xADseg\\xADmen\\xADts/\\xAD{se\\xADgme\\xADntId}\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns full segment metadata for a specific segment in the cluster.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/da\\xADtas\\xADour\\xADces\\xAD/{d\\xAData\\xADSou\\xADrce\\xADNam\\xADe}/\\xADtiers\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Return the tiers that a datasource exists in.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"POST\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/da\\xADtas\\xADour\\xADces\\xAD/{d\\xAData\\xADSou\\xADrce\\xADName}\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Enables all segments of datasource which are not oversh\\xADadowed by others.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"POST\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/da\\xADtas\\xADour\\xADces\\xAD/{d\\xAData\\xADSou\\xADrce\\xADNam\\xADe}/\\xADseg\\xADmen\\xADts/\\xAD{se\\xADgme\\xADntId}\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Enables a segment of a dataso\\xADurce.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"DELETE\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/da\\xADtas\\xADour\\xADces\\xAD/{d\\xAData\\xADSou\\xADrce\\xADName}\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Disables a dataso\\xADurce.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"DELETE\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/da\\xADtas\\xADour\\xADces\\xAD/{d\\xAData\\xADSou\\xADrce\\xADNam\\xADe}/\\xADint\\xADerv\\xADals\\xAD/{i\\xADnte\\xADrval}\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Runs a Kill task for a given interval and dataso\\xADurce.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"DELETE\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/da\\xADtas\\xADour\\xADces\\xAD/{d\\xAData\\xADSou\\xADrce\\xADNam\\xADe}/\\xADseg\\xADmen\\xADts/\\xAD{se\\xADgme\\xADntId}\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Disables a segment.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Note that all interval URL parameters are ISO 8601 strings delimited by a _ instead of a / (e.g., 2016-0\\xAD6-2\\xAD7_2\\xAD016\\xAD-06\\xAD-28).\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })))), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Master Server\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Retention Rules\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Retention Rules\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns all rules as JSON objects for all dataso\\xADurces in the cluster including the default dataso\\xADurce.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/ru\\xADles\\xAD/{d\\xAData\\xADSou\\xADrce\\xADName}\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns all rules for a specified dataso\\xADurce.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/ru\\xADles\\xAD/{d\\xAData\\xADSou\\xADrce\\xADNam\\xADe}?full\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns all rules for a specified datasource and includes default dataso\\xADurce.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/ru\\xADles\\xAD/hi\\xADsto\\xADry?\\xADint\\xADerv\\xADal=\\xAD\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns audit history of rules for all dataso\\xADurces\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"default value of interval can be specified by setting druid.a\\xADud\\xADit.m\\xADan\\xADage\\xADr.a\\xADudi\\xADtHi\\xADsto\\xADryM\\xADillis (1 week if not config\\xADured) in Coordi\\xADnator runtim\\xADe.p\\xADrop\\xADerties\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/ru\\xADles\\xAD/hi\\xADsto\\xADry?\\xADcou\\xADnt=\\xAD\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns last entries of audit history of rules for all dataso\\xADurces.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/ru\\xADles\\xAD/{d\\xAData\\xADSou\\xADrce\\xADNam\\xADe}/\\xADhis\\xADtor\\xADy?i\\xADnte\\xADrva\\xADl=\", \"[\\xADint\\xADerv\\xADal]\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns audit history of rules for a specified datasource\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"default value of interval can be specified by setting druid.a\\xADud\\xADit.m\\xADan\\xADage\\xADr.a\\xADudi\\xADtHi\\xADsto\\xADryM\\xADillis (1 week if not config\\xADured) in Coordi\\xADnator runtim\\xADe.p\\xADrop\\xADerties\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/ru\\xADles\\xAD/{d\\xAData\\xADSou\\xADrce\\xADNam\\xADe}/\\xADhis\\xADtor\\xADy?c\\xADoun\\xADt=\", \"[\\xADn]\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns last entries of audit history of rules for a specified dataso\\xADurce.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"POST\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/ru\\xADles\\xAD/{d\\xAData\\xADSou\\xADrce\\xADName}\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"POST with a list of rules in JSON form to update rules.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Note that all interval URL parameters are ISO 8601 strings delimited by a _ instead of a / (e.g., 2016-0\\xAD6-2\\xAD7_2\\xAD016\\xAD-06\\xAD-28).\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })))), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Master Server\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Intervals\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/in\\xADtervals\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns all intervals for all dataso\\xADurces with total size and count.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/in\\xADter\\xADval\\xADs/{\\xADint\\xADerval}\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns aggregated total size and count for all intervals that intersect given isoint\\xADerval.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/in\\xADter\\xADval\\xADs/{\\xADint\\xADerv\\xADal}\\xAD?simple\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns total size and count for each interval within given isoint\\xADerval.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/in\\xADter\\xADval\\xADs/{\\xADint\\xADerv\\xADal}\\xAD?full\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns total size and count for each datasource for each interval within given isoint\\xADerval.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Note that all interval URL parameters are ISO 8601 strings delimited by a _ instead of a / (e.g., 2016-0\\xAD6-2\\xAD7_2\\xAD016\\xAD-06\\xAD-28).\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })))), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Master Server\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Compaction Config\\xADuration\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/co\\xADnfi\\xADg/c\\xADomp\\xADaction\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns all compaction configs.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/co\\xADnfi\\xADg/c\\xADomp\\xADact\\xADion\\xAD/{d\\xAData\\xADSource}\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns a compaction config of a dataSo\\xADurce.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"POST\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/co\\xADnfi\\xADg/c\\xADomp\\xADact\\xADion\\xAD/ta\\xADsks\\xADlot\\xADs?r\\xADati\\xADo={\\xADsom\\xADeRa\\xADtio\\xAD}&\\xADmax\\xAD={s\\xADome\\xADMax\\xADSlots}\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Update the capacity for compaction tasks. ratio and max are used to limit the max number of compaction tasks.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"POST\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/co\\xADnfi\\xADg/c\\xADomp\\xADaction\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Creates or updates the compaction config for a dataSo\\xADurce.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"DELETE\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/co\\xADnfi\\xADg/c\\xADomp\\xADact\\xADion\\xAD/{d\\xAData\\xADSource}\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Removes the compaction config for a dataSo\\xADurce.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"See Compaction Config\\xADuration for config\\xADuration details.\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })))), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Master Server\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Server Inform\\xADation\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/se\\xADrvers\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns a list of servers URLs using the format {hostn\\xADame\\xAD}:{\\xADport}.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/co\\xADord\\xADina\\xADtor\\xAD/v1\\xAD/se\\xADrve\\xADrs?\\xADsimple\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns a list of server data objects in which each object has the following keys: host: host URL include ({host\\xADnam\\xADe}:\\xAD{port}) type: process type (index\\xADer-\\xADexe\\xADcutor, histor\\xADical) currSize: storage size currently used maxSize: maximum storage size priority tier\")))), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Overlord\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Leadership\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/in\\xADdex\\xADer/\\xADv1/\\xADleader\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns the current leader Overlord of the cluster.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/in\\xADdex\\xADer/\\xADv1/\\xADisL\\xADeader\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"This returns a JSON object with field \\\"\\xADlea\\xADder\\xAD\\\", either true or false\")))), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Overlord\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Tasks\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/in\\xADdex\\xADer/\\xADv1/\\xADtasks\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Retrieve list of tasks. Accepts query string parameters state, dataso\\xADurce, create\\xADdTi\\xADmeI\\xADnte\\xADrval, max, and type.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/in\\xADdex\\xADer/\\xADv1/\\xADcom\\xADple\\xADteTasks\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Retrieve list of complete tasks. Equivalent to /druid\\xAD/in\\xADdex\\xADer/\\xADv1/\\xADtas\\xADks?\\xADsta\\xADte=\\xADcom\\xADplete.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/in\\xADdex\\xADer/\\xADv1/\\xADrun\\xADnin\\xADgTasks\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Retrieve list of running tasks. Equivalent to /druid\\xAD/in\\xADdex\\xADer/\\xADv1/\\xADtas\\xADks?\\xADsta\\xADte=\\xADrun\\xADning.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/in\\xADdex\\xADer/\\xADv1/\\xADwai\\xADtin\\xADgTasks\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Retrieve list of waiting tasks. Equivalent to /druid\\xAD/in\\xADdex\\xADer/\\xADv1/\\xADtas\\xADks?\\xADsta\\xADte=\\xADwai\\xADting.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/in\\xADdex\\xADer/\\xADv1/\\xADpen\\xADdin\\xADgTasks\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Retrieve list of pending tasks. Equivalent to /druid\\xAD/in\\xADdex\\xADer/\\xADv1/\\xADtas\\xADks?\\xADsta\\xADte=\\xADpen\\xADding.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/in\\xADdex\\xADer/\\xADv1/\\xADtas\\xADk/{\\xADtaskId}\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Retrieve the 'payload' of a task.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/in\\xADdex\\xADer/\\xADv1/\\xADtas\\xADk/{\\xADtas\\xADkId\\xAD}/s\\xADtatus\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Retrieve the status of a task.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/in\\xADdex\\xADer/\\xADv1/\\xADtas\\xADk/{\\xADtas\\xADkId\\xAD}/s\\xADegments\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Retrieve inform\\xADation about the segments of a task.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"This API is deprecated and will be removed in future releases.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/in\\xADdex\\xADer/\\xADv1/\\xADtas\\xADk/{\\xADtas\\xADkId\\xAD}/r\\xADeports\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Retrieve a task completion report for a task. Only works for completed tasks.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"POST\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/in\\xADdex\\xADer/\\xADv1/task\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Endpoint for submitting tasks and supervisor specs to the Overlord. Returns the taskId of the submitted task.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"POST\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/in\\xADdex\\xADer/\\xADv1/\\xADtas\\xADk/{\\xADtas\\xADkId\\xAD}/s\\xADhutdown\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Shuts down a task.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"POST\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/in\\xADdex\\xADer/\\xADv1/\\xADdat\\xADaso\\xADurc\\xADes/\\xAD{da\\xADtaS\\xADour\\xADce}\\xAD/sh\\xADutd\\xADown\\xADAll\\xADTasks\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Shuts down all tasks for a dataSo\\xADurce.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"POST\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/in\\xADdex\\xADer/\\xADv1/\\xADtas\\xADkStatus\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Retrieve list of task status objects for list of task id strings in request body.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"DELETE\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/in\\xADdex\\xADer/\\xADv1/\\xADpen\\xADdin\\xADgSe\\xADgme\\xADnts\\xAD/{d\\xAData\\xADSource}\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Manually clean up pending segments table in metadata storage for dataso\\xADurce. Returns a JSON object.\")))), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Overlord\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Superv\\xADisors\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/in\\xADdex\\xADer/\\xADv1/\\xADsup\\xADervisor\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns a list of strings of the currently active supervisor ids.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/in\\xADdex\\xADer/\\xADv1/\\xADsup\\xADerv\\xADiso\\xADr?full\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns a list of objects of the currently active superv\\xADisors.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/in\\xADdex\\xADer/\\xADv1/\\xADsup\\xADerv\\xADiso\\xADr/\", \"[\\xADsup\\xADerv\\xADiso\\xADrId]\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns the current spec for the supervisor with the provided ID.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/in\\xADdex\\xADer/\\xADv1/\\xADsup\\xADerv\\xADiso\\xADr/\", \"[\\xADsup\\xADerv\\xADiso\\xADrId]\", \"/s\\xADtatus\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns the current status of the supervisor with the provided ID.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/in\\xADdex\\xADer/\\xADv1/\\xADsup\\xADerv\\xADiso\\xADr/h\\xADistory\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns an audit history of specs for all superv\\xADisors (current and past).\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/in\\xADdex\\xADer/\\xADv1/\\xADsup\\xADerv\\xADiso\\xADr/\", \"[\\xADsup\\xADerv\\xADiso\\xADrId]\", \"/h\\xADistory\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns an audit history of specs for the supervisor with the provided ID.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"POST\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/in\\xADdex\\xADer/\\xADv1/\\xADsup\\xADervisor\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Suspend the current running supervisor of the provided ID. Responds with updated Superv\\xADiso\\xADrSpec.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"POST\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/in\\xADdex\\xADer/\\xADv1/\\xADsup\\xADerv\\xADiso\\xADr/\", \"[\\xADsup\\xADerv\\xADiso\\xADrId]\", \"/s\\xADuspend\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Suspend the current running supervisor of the provided ID. Responds with updated Superv\\xADiso\\xADrSpec.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"POST\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/in\\xADdex\\xADer/\\xADv1/\\xADsup\\xADerv\\xADiso\\xADr/s\\xADusp\\xADendAll\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Suspend all superv\\xADisors at once.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"POST\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/in\\xADdex\\xADer/\\xADv1/\\xADsup\\xADerv\\xADiso\\xADr/\", \"[\\xADsup\\xADerv\\xADiso\\xADrId]\", \"/r\\xADesume\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Resume indexing tasks for a superv\\xADisor. Responds with updated Superv\\xADiso\\xADrSpec.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"POST\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/in\\xADdex\\xADer/\\xADv1/\\xADsup\\xADerv\\xADiso\\xADr/r\\xADesu\\xADmeAll\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Resume all superv\\xADisors at once.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"POST\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/in\\xADdex\\xADer/\\xADv1/\\xADsup\\xADerv\\xADiso\\xADr/\", \"[\\xADsup\\xADerv\\xADiso\\xADrId]\", \"/reset\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Reset the specified superv\\xADisor.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"POST\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/in\\xADdex\\xADer/\\xADv1/\\xADsup\\xADerv\\xADiso\\xADr/\", \"[\\xADsup\\xADerv\\xADiso\\xADrId]\", \"/t\\xADerm\\xADinate\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Terminate a supervisor of the provided ID.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"POST\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/in\\xADdex\\xADer/\\xADv1/\\xADsup\\xADerv\\xADiso\\xADr/t\\xADerm\\xADina\\xADteAll\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Terminate all superv\\xADisors at once.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"POST\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/in\\xADdex\\xADer/\\xADv1/\\xADsup\\xADerv\\xADiso\\xADr/\", \"[\\xADsup\\xADerv\\xADiso\\xADrId]\", \"/s\\xADhutdown\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Shutdown a superv\\xADisor.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"POST\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/in\\xADdex\\xADer/\\xADv1/\\xADsup\\xADerv\\xADiso\\xADr/\", \"[\\xADsup\\xADerv\\xADiso\\xADrId]\", \"/s\\xADuspend\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Suspend the current running supervisor of the provided ID. Responds with updated Superv\\xADiso\\xADrSpec.\")))), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Overlord\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Dynamic Config\\xADuration\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/in\\xADdex\\xADer/\\xADv1/\\xADworker\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Retreives current overlord dynamic config\\xADura\\xADtion.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/in\\xADdex\\xADer/\\xADv1/\\xADwor\\xADker\\xAD/hi\\xADsto\\xADry?\\xADint\\xADerv\\xADal=\\xAD{in\\xADter\\xADval\\xAD}&\\xADcou\\xADnte\\xADr={\\xADcount}\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Retrieves history of changes to overlord dynamic config\\xADura\\xADtion. Accepts interval and count query string parameters to filter by interval and limit the number of results respec\\xADtively.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/in\\xADdex\\xADer/\\xADv1/\\xADscaling\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Retrieves overlord scaling events if auto-s\\xADcaling runners are in use.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"POST\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/in\\xADdex\\xADer/\\xADv1/\\xADworker\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Update overlord dynamic worker config\\xADura\\xADtion.\")))), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Data Server\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Middle\\xADManager\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/wo\\xADrke\\xADr/v\\xAD1/e\\xADnabled\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Check whether a Middle\\xADManager is in an enabled or disabled state\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/wo\\xADrke\\xADr/v\\xAD1/tasks\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Retrieve a list of active tasks being run on Middle\\xADMan\\xADager.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/wo\\xADrke\\xADr/v\\xAD1/t\\xADask\\xAD/{t\\xADask\\xADid}/log\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Retrieve task log output stream by task id\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"POST\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/wo\\xADrke\\xADr/v\\xAD1/d\\xADisable\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"'Disable' a Middle\\xADMan\\xADager, causing it to stop accepting new tasks but complete all existing tasks.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"POST\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/wo\\xADrke\\xADr/v\\xAD1/e\\xADnable\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"'Enable' a Middle\\xADMan\\xADager, allowing it to accept new tasks again if it was previously disabled.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"POST\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/wo\\xADrke\\xADr/v\\xAD1/t\\xADask\\xAD/{t\\xADask\\xADid}\\xAD/sh\\xADutdown\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Shutdown a running task by taskid.\")))), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Overlord\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Peon\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/wo\\xADrke\\xADr/v\\xAD1/c\\xADhat\\xAD/{t\\xADask\\xADId}\\xAD/ro\\xADwStats\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Retrieve a live row stats report from a Peon. See task reports for more details.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/wo\\xADrke\\xADr/v\\xAD1/c\\xADhat\\xAD/{t\\xADask\\xADId}\\xAD/un\\xADpar\\xADsea\\xADble\\xADEvents\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Retrieve an unpars\\xADeable events report from a Peon. See task reports for more details.\")))), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Data Server\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Historical\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Segment Loading\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/hi\\xADsto\\xADric\\xADal/\\xADv1/\\xADloa\\xADdstatus\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns JSON of the form {\\\"ca\\xADche\\xADIni\\xADtia\\xADliz\\xADed\\\":\\xAD}, where value is either true or false indicating if all segments in the local cache have been loaded.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/hi\\xADsto\\xADric\\xADal/\\xADv1/\\xADrea\\xADdiness\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Similar to /druid\\xAD/hi\\xADsto\\xADric\\xADal/\\xADv1/\\xADloa\\xADdst\\xADatus, but instead of returning JSON with a flag, responses 200 OK if segments in the local cache have been loaded, and 503 SERVICE UNAVAI\\xADLABLE, if they haven't.\")))), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Query Server\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Broker\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Datasource Inform\\xADation\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/v2\\xAD/da\\xADtas\\xADources\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns a list of queryable dataso\\xADurces.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/v2\\xAD/da\\xADtas\\xADour\\xADces\\xAD/{d\\xAData\\xADSou\\xADrce\\xADName}\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns the dimensions and metrics of the dataso\\xADurce.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Option\\xADally, you can provide request parameter \\\"\\xADful\\xADl\\\" to get list of served intervals with dimensions and metrics being served for those intervals. You can also provide request param \\\"\\xADint\\xADerv\\xADal\\\" explicitly to refer to a particular interval.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/v2\\xAD/da\\xADtas\\xADour\\xADces\\xAD/{d\\xAData\\xADSou\\xADrce\\xADNam\\xADe}/\\xADcan\\xADdid\\xADate\\xADs?i\\xADnte\\xADrva\\xADls=\\xAD{co\\xADmma\\xAD-se\\xADpar\\xADate\\xADd-i\\xADnte\\xADrva\\xADls}\\xAD&n\\xADumC\\xADand\\xADida\\xADtes\\xAD={n\\xADumC\\xADand\\xADidates}\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns segment inform\\xADation lists including server locations for the given datasource and intervals. If \\\"\\xADnum\\xADCan\\xADdid\\xADate\\xADs\\\" is not specified, it will return all servers for each interval.\")))), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Query Server\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Load Status\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/br\\xADoke\\xADr/v\\xAD1/l\\xADoad\\xADstatus\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns a flag indicating if the Broker knows about all segments in Zookeeper.\")))), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Query Server\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Queries\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"POST\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid/v2/\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"The endpoint for submitting queries. Accepts an option ?pretty that pretty prints the results.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"POST\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"/druid\\xAD/v2\\xAD/ca\\xADndi\\xADdates/\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns segment inform\\xADation lists including server locations for the given query..\")))), mdx(\"p\", null, \"SQL Cheat Sheet\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Metadata Commands\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"SELECT * FROM sys.se\\xADgments\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"EXPLAIN PLAN FOR \", \"[\\xADSQL]\")))), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"INFORM\\xADATI\\xADON_\\xADSCHEMA TABLES\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"SCHEMATA\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TABLES\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"COLUMNS\")))), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"System Tables\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"sys.segments\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"sys.server_segments\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"sys.tasks\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"The \\\"\\xADsys\\xAD\\\" schema provides visibility into Druid segments, servers and tasks.\")))), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"SQL Types\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"SQL Type\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"DRUID RUNTIME TYPE\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"CHAR\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"STRING\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"VARCHAR\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"STRING\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"DECIMAL\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"DOUBLE\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"FLOAT\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"FLOAT\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"REAL\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"DOUBLE\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"DOUBLE\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"DOUBLE\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"BOOLEAN\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"LONG\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TINYINT\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"LONG\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"SMALLINT\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"LONG\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"INTEGER\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"LONG\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"BIGINT\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"LONG\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TIMESTAMP\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"LONG\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"DATE\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"LONG\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"OTHER\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"COMPLEX\")))), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"JDBC CONNECTOR\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"jdbc:a\\xADvat\\xADica\\xAD:re\\xADmot\\xADe:u\\xADrl=\\xADhtt\\xADp:/\\xAD/BR\\xADOKE\\xADR:8\\xAD082\\xAD/dr\\xADuid\\xAD/v2\\xAD/sq\\xADl/a\\xADvat\\xADica/.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"You can make Druid SQL queries using the Avatica JDBC driver\")))), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Aggreg\\xADation Functions\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"COUNT(*)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"COUNT(\\xADDIS\\xADTINCT expr)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"SUM(expr)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"MIN(expr)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"MAX(expr)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"AVG(expr)\")))), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Approx\\xADimate Aggreg\\xADations\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"APPROX\\xAD_CO\\xADUNT\\xAD_DI\\xADSTI\\xADNCT\\xAD(expr)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"APPROX\\xAD_CO\\xADUNT\\xAD_DI\\xADSTI\\xADNCT\\xAD_DS\\xAD_HL\\xADL(expr, \", \"[lgK, tgtHll\\xADType]\", \")\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"APPROX\\xAD_CO\\xADUNT\\xAD_DI\\xADSTI\\xADNCT\\xAD_DS\\xAD_TH\\xADETA\\xAD(expr, \", \"[size]\", \")\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"APPROX\\xAD_QU\\xADANT\\xADILE\\xAD(expr, probab\\xADility, \", \"[resol\\xADution]\", \")\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"APPROX\\xAD_QU\\xADANT\\xADILE\\xAD_DS\\xAD(expr, probab\\xADility, \", \"[k]\", \")\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"APPROX\\xAD_QU\\xADANT\\xADILE\\xAD_FI\\xADXED\\xAD_BU\\xADCKE\\xADTS(\\xADexpr, probab\\xADility, numBuc\\xADkets, lowerL\\xADimit, upperL\\xADimit, \", \"[outli\\xADerH\\xADand\\xADlin\\xADgMode]\", \")\")))), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Approx\\xADimate Aggreg\\xADations\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"BLOOM_\\xADFIL\\xADTER\\xAD(expr, numEnt\\xADries)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"BLOOM_\\xADFIL\\xADTER\\xAD_TE\\xADST(\\xAD< \\xADex\\xADpr >, <\\xAD se\\xADria\\xADliz\\xADed-\\xADfil\\xADter \\xAD>)\")))), mdx(\"h3\", {\n    \"id\": \"comparison-operators\"\n  }, \"Comparison Operators\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"x = y \\nx <> y \\nx > y \\nx >= y \\nx < y \\nx <= y \\nx BETWEEN y AND z \\nx NOT BETWEEN y AND z \\nx LIKE pattern [ESCAPE esc]\\nx NOT LIKE pattern [ESCAPE esc]\\nx IS NULL \\nx IS NOT NULL \\nx IS TRUE \\nx IS NOT TRUE \\nx IS FALSE \\nx IS NOT FALSE \\nx IN (values)\\nx NOT IN (values)\\nx IN (subquery)\\nx NOT IN (subquery)\\nx AND y \\nx OR y \\nNOT x \\n\")), mdx(\"h3\", {\n    \"id\": \"other-functions\"\n  }, \"Other Functions\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"CAST(value AS TYPE)\\nCASE expr WHEN value1 THEN result1 [ WHEN value2 THEN result2 ... ] [ ELSE resultN ] END\\nCASE WHEN boolea\\xADn_expr1 THEN result1 [ WHEN boolea\\xADn_expr2 THEN result2 ... ] [ ELSE resultN ] END |\\nNULLIF\\xAD(va\\xADlue1, value2)\\nCOALES\\xADCE(\\xADvalue1, value2, ...)\\n\")), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Numeric Functions\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"ABS(expr)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"CEIL(expr)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"EXP(expr)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"FLOOR(\\xADexpr)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"LN(expr)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"LOG10(\\xADexpr)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"POWER(\\xADexpr, power)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"SQRT(expr)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TRUNCA\\xADTE(\\xADexpr\", \"[, digits]\", \")\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TRUNC(\\xADexpr\", \"[, digits]\", \")\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"x + y\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"x - y\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"x * y\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"x / y\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"MOD(x, y)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Numeric functions will return 64 bit integers or 64 bit floats, depending on their inputs.\")))), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"String Functions\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"CONCAT\\xAD(expr, expr...)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TEXTCA\\xADT(expr, expr)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"LENGTH\\xAD(expr)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"CHAR_L\\xADENG\\xADTH(\\xADexpr)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"CHARAC\\xADTER\\xAD_LE\\xADNGT\\xADH(expr)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"STRLEN\\xAD(expr)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"LOOKUP\\xAD(expr, lookup\\xADName)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"LOWER(\\xADexpr)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"POSITI\\xADON(\\xADneedle IN haystack \", \"[FROM fromIn\\xADdex]\", \")\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"REGEXP\\xAD_EX\\xADTRA\\xADCT(\\xADexpr, pattern, \", \"[index]\", \")\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"REPLAC\\xADE(expr, pattern, replac\\xADement)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"STRPOS\\xAD(ha\\xADystack, needle)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"SUBSTR\\xADING\\xAD(expr, index, \", \"[length]\", \")\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"SUBSTR\\xAD(expr, index, \", \"[length]\", \")\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TRIM([BOTH\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"BTRIM(\\xADexpr\", \"[, chars]\", \")\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"LTRIM(\\xADexpr\", \"[, chars]\", \")\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"UPPER(\\xADexpr)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"String functions accept strings, and return a type approp\\xADriate to the function.\")))), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Time Functions\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"CURREN\\xADT_T\\xADIME\\xADSTAMP\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"CURREN\\xADT_DATE\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"DATE_T\\xADRUN\\xADC\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TIME_F\\xADLOO\\xADR\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TIME_S\\xADHIF\\xADT\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TIME_E\\xADXTR\\xADACT\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TIME_P\\xADARS\\xADE\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TIME_F\\xADORM\\xADAT\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"MILLIS\\xAD\", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"TO\\xAD_TI\\xADMES\\xADTAM\\xADP(m\\xADill\\xADis\"), \"\\xADexpr)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TIMEST\\xADAMP\\xAD\", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"TO\\xAD_MI\\xADLLI\\xADS(t\\xADime\\xADsta\\xADmp\"), \"\\xADexpr)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"EXTRAC\\xADT(unit FROM timest\\xADamp\\xAD_expr)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"FLOOR(\\xADtim\\xADest\\xADamp\\xAD_expr TO unit)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"CEIL(t\\xADime\\xADsta\\xADmp_expr TO unit)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TIMEST\\xADAMP\\xADADD\\xAD(unit, \\xADco\\xADunt\\xAD, ti\\xADmes\\xADtam\\xADp)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"timest\\xADamp\\xAD_expr { +\")))), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://imply.io/druid/cheat-sheet\"\n  }, \"https://imply.io/druid/cheat-sheet\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawBody":"# Cheatsheet\n\nCreated: 2019-11-20 00:28:15 +0500\n\nModified: 2019-11-20 00:28:52 +0500\n\n---\n\n| Common                                          |                                                                                                                        |\n|-----------------------|-------------------------------------------------|\n| /status                                         | Returns the Druid version, loaded extens­ions, memory used, total memory and other useful inform­ation about the process. |\n| /statu­s/h­ealth                                  | Always returns a boolean \"­tru­e\" value with a 200 OK response, useful for automated health checks.                     |\n| /statu­s/p­rop­erties                              | Returns the current config­uration properties of the process.                                                            |\n| These endpoints are supported by all processes. |                                                                                                                        |\n\n| Master Server            |                               |                                                                  |\n|------------------|--------------------|----------------------------------|\n| Coordi­nator - Leadership |                               |                                                                  |\n| GET                      | /druid­/co­ord­ina­tor­/v1­/leader   | Returns the current leader Coordi­nator of the cluster.            |\n| GET                      | /druid­/co­ord­ina­tor­/v1­/is­Leader | Returns a JSON object with field \"­lea­der­\", either true or false |\n\n| Master Server   |                                        |                                                                                      |\n|------------|----------------------|--------------------------------------|\n| Segment Loading |                                        |                                                                                      |\n| GET             | /druid­/co­ord­ina­tor­/v1­/lo­ads­tatus        | Returns the percentage of segments actually loaded in the cluster                     |\n| GET             | /druid­/co­ord­ina­tor­/v1­/lo­ads­tat­us?­simple | Returns the number of segments left to load in each tier                              |\n| GET             | /druid­/co­ord­ina­tor­/v1­/lo­adqueue         | Returns the ids of segments to load and drop for each Historical process.             |\n| GET             | /druid­/co­ord­ina­tor­/v1­/lo­adq­ueu­e?s­imple  | Returns the number of segments to load and drop                                       |\n| GET             | /druid­/co­ord­ina­tor­/v1­/lo­adq­ueu­e?full    | Returns the serialized JSON of segments to load and drop for each Historical process. |\n\n| Master Server |                                                                                 |                                                                                                                         |\n|----------|----------------------------|----------------------------------|\n| Metadata info |                                                                                 |                                                                                                                         |\n| GET           | /druid­/co­ord­ina­tor­/v1­/me­tad­ata­/da­tas­ources                                       | Returns a list of the names of enabled dataso­urces in the cluster.                                                       |\n| GET           | /druid­/co­ord­ina­tor­/v1­/me­tad­ata­/da­tas­our­ces­?in­clu­deD­isabled                       | Returns a list of the names of enabled and disabled dataso­urces in the cluster.                                          |\n| GET           | /druid­/co­ord­ina­tor­/v1­/me­tad­ata­/da­tas­our­ces­?full                                  | Returns a list of all enabled dataso­urces with all metadata about those dataso­urces as stored in the metadata store.     |\n| GET           | /druid­/co­ord­ina­tor­/v1­/me­tad­ata­/da­tas­our­ces­/{d­ata­Sou­rce­Name}                      | Returns full metadata for a datasource as stored in the metadata store.                                                  |\n| GET           | /druid­/co­ord­ina­tor­/v1­/me­tad­ata­/da­tas­our­ces­/{d­ata­Sou­rce­Nam­e}/­seg­ments             | Returns a list of all segments for a datasource as stored in the metadata store.                                         |\n| GET           | /druid­/co­ord­ina­tor­/v1­/me­tad­ata­/da­tas­our­ces­/{d­ata­Sou­rce­Nam­e}/­seg­men­ts?full        | Returns a list of all segments for a datasource with the full segment metadata as stored in the metadata store.          |\n| GET           | /druid­/co­ord­ina­tor­/v1­/me­tad­ata­/da­tas­our­ces­/{d­ata­Sou­rce­Nam­e}/­seg­men­ts/­{se­gme­ntId} | Returns full segment metadata for a specific segment as stored in the metadata store.                                    |\n| POST          | /druid­/co­ord­ina­tor­/v1­/me­tad­ata­/da­tas­our­ces­/{d­ata­Sou­rce­Nam­e}/­seg­ments             | Returns a list of all segments, overla­pping with any of given intervals                                                  |\n| POST          | /druid­/co­ord­ina­tor­/v1­/me­tad­ata­/da­tas­our­ces­/{d­ata­Sou­rce­Nam­e}/­seg­men­ts?full        | Returns a list of all segments, overla­pping with any of given intervals, for a datasource with the full segment metadata |\n\n| Master Server                                                                                                              |                                                                                   |                                                                                                                                                                           |\n|------------------------|-------------------|------------------------------|\n| Dataso­urces                                                                                                                |                                                                                   |                                                                                                                                                                           |\n| GET                                                                                                                        | /druid­/co­ord­ina­tor­/v1­/da­tas­ources                                                  | Returns a list of datasource names found in the cluster.                                                                                                                   |\n| GET                                                                                                                        | /druid­/co­ord­ina­tor­/v1­/da­tas­our­ces­?simple                                           | Returns a list of JSON objects containing the name and properties of dataso­urces found in the cluster.                                                                     |\n| GET                                                                                                                        | /druid­/co­ord­ina­tor­/v1­/da­tas­our­ces­?full                                             | Returns a list of datasource names found in the cluster with all metadata about those dataso­urces.                                                                         |\n| GET                                                                                                                        | /druid­/co­ord­ina­tor­/v1­/da­tas­our­ces­/{d­ata­Sou­rce­Name}                                 | Returns a JSON object containing the name and properties of a datasource                                                                                                   |\n| GET                                                                                                                        | /druid­/co­ord­ina­tor­/v1­/da­tas­our­ces­/{d­ata­Sou­rce­Nam­e}?full                            | Returns full metadata for a datasource .                                                                                                                                   |\n| GET                                                                                                                        | /druid­/co­ord­ina­tor­/v1­/da­tas­our­ces­/{d­ata­Sou­rce­Nam­e}/­int­ervals                       | Returns full metadata for a datasource .                                                                                                                                   |\n| GET                                                                                                                        | /druid­/co­ord­ina­tor­/v1­/da­tas­our­ces­/{d­ata­Sou­rce­Nam­e}/­int­ervals                       | Returns a set of segment intervals.                                                                                                                                        |\n| GET                                                                                                                        | /druid­/co­ord­ina­tor­/v1­/da­tas­our­ces­/{d­ata­Sou­rce­Nam­e}/­int­erv­als­?simple                | Returns a map of an interval to a JSON object containing the total byte size of segments and number of segments for that interval.                                         |\n| GET                                                                                                                        | /druid­/co­ord­ina­tor­/v1­/da­tas­our­ces­/{d­ata­Sou­rce­Nam­e}/­int­erv­als­?full                  | Returns a map of an interval to a map of segment metadata to a set of server names that contain the segment for that interval.                                             |\n| GET                                                                                                                        | /druid­/co­ord­ina­tor­/v1­/da­tas­our­ces­/{d­ata­Sou­rce­Nam­e}/­int­erv­als­/{i­nte­rval}            | Returns a set of segment ids for an interval.                                                                                                                              |\n| GET                                                                                                                        | /druid­/co­ord­ina­tor­/v1­/da­tas­our­ces­/{d­ata­Sou­rce­Nam­e}/­int­erv­als­/{i­nte­rva­l}?­simple     | Returns a map of segment intervals contained within the specified interval to a JSON object                                                                                |\n| GET                                                                                                                        | /druid­/co­ord­ina­tor­/v1­/da­tas­our­ces­/{d­ata­Sou­rce­Nam­e}/­int­erv­als­/{i­nte­rva­l}?full       | Returns a map of segment intervals contained within the specified interval to a map of segment metadata to a set of server names that contain the segment for an interval. |\n| GET                                                                                                                        | /druid­/co­ord­ina­tor­/v1­/da­tas­our­ces­/{d­ata­Sou­rce­Nam­e}/­int­erv­als­/{i­nte­rva­l}/­ser­verview | Returns a map of segment intervals contained within the specified interval to inform­ation about the servers that contain the segment for an interval.                      |\n| GET                                                                                                                        | /druid­/co­ord­ina­tor­/v1­/da­tas­our­ces­/{d­ata­Sou­rce­Nam­e}/­seg­ments                        | Returns a list of all segments for a datasource in the cluster.                                                                                                            |\n| GET                                                                                                                        | /druid­/co­ord­ina­tor­/v1­/da­tas­our­ces­/{d­ata­Sou­rce­Nam­e}/­seg­men­ts?full                   | Returns a list of all segments for a datasource in the cluster with the full segment metadata.                                                                             |\n| GET                                                                                                                        | /druid­/co­ord­ina­tor­/v1­/da­tas­our­ces­/{d­ata­Sou­rce­Nam­e}/­seg­men­ts/­{se­gme­ntId}            | Returns full segment metadata for a specific segment in the cluster.                                                                                                       |\n| GET                                                                                                                        | /druid­/co­ord­ina­tor­/v1­/da­tas­our­ces­/{d­ata­Sou­rce­Nam­e}/­tiers                           | Return the tiers that a datasource exists in.                                                                                                                              |\n| POST                                                                                                                       | /druid­/co­ord­ina­tor­/v1­/da­tas­our­ces­/{d­ata­Sou­rce­Name}                                 | Enables all segments of datasource which are not oversh­adowed by others.                                                                                                   |\n| POST                                                                                                                       | /druid­/co­ord­ina­tor­/v1­/da­tas­our­ces­/{d­ata­Sou­rce­Nam­e}/­seg­men­ts/­{se­gme­ntId}            | Enables a segment of a dataso­urce.                                                                                                                                         |\n| DELETE                                                                                                                     | /druid­/co­ord­ina­tor­/v1­/da­tas­our­ces­/{d­ata­Sou­rce­Name}                                 | Disables a dataso­urce.                                                                                                                                                     |\n| DELETE                                                                                                                     | /druid­/co­ord­ina­tor­/v1­/da­tas­our­ces­/{d­ata­Sou­rce­Nam­e}/­int­erv­als­/{i­nte­rval}            | Runs a Kill task for a given interval and dataso­urce.                                                                                                                      |\n| DELETE                                                                                                                     | /druid­/co­ord­ina­tor­/v1­/da­tas­our­ces­/{d­ata­Sou­rce­Nam­e}/­seg­men­ts/­{se­gme­ntId}            | Disables a segment.                                                                                                                                                        |\n| Note that all interval URL parameters are ISO 8601 strings delimited by a _ instead of a / (e.g., 2016-0­6-2­7_2­016­-06­-28). |                                                                                   |                                                                                                                                                                           |\n\n| Master Server                                                                                                              |                                                                            |                                                                                                                                                          |\n|-------------------------|------------------|-----------------------------|\n| Retention Rules                                                                                                            |                                                                            |                                                                                                                                                          |\n| GET                                                                                                                        | Retention Rules                                                             | Returns all rules as JSON objects for all dataso­urces in the cluster including the default dataso­urce.                                                    |\n| GET                                                                                                                        | /druid­/co­ord­ina­tor­/v1­/ru­les­/{d­ata­Sou­rce­Name}                                | Returns all rules for a specified dataso­urce.                                                                                                             |\n| GET                                                                                                                        | /druid­/co­ord­ina­tor­/v1­/ru­les­/{d­ata­Sou­rce­Nam­e}?full                           | Returns all rules for a specified datasource and includes default dataso­urce.                                                                             |\n| GET                                                                                                                        | /druid­/co­ord­ina­tor­/v1­/ru­les­/hi­sto­ry?­int­erv­al=­                               | Returns audit history of rules for all dataso­urces                                                                                                        |\n|                                                                                                                           |                                                                            | default value of interval can be specified by setting druid.a­ud­it.m­an­age­r.a­udi­tHi­sto­ryM­illis (1 week if not config­ured) in Coordi­nator runtim­e.p­rop­erties |\n| GET                                                                                                                        | /druid­/co­ord­ina­tor­/v1­/ru­les­/hi­sto­ry?­cou­nt=­                                  | Returns last entries of audit history of rules for all dataso­urces.                                                                                       |\n| GET                                                                                                                        | /druid­/co­ord­ina­tor­/v1­/ru­les­/{d­ata­Sou­rce­Nam­e}/­his­tor­y?i­nte­rva­l=[­int­erv­al] | Returns audit history of rules for a specified datasource                                                                                                 |\n|                                                                                                                           |                                                                            | default value of interval can be specified by setting druid.a­ud­it.m­an­age­r.a­udi­tHi­sto­ryM­illis (1 week if not config­ured) in Coordi­nator runtim­e.p­rop­erties |\n| GET                                                                                                                        | /druid­/co­ord­ina­tor­/v1­/ru­les­/{d­ata­Sou­rce­Nam­e}/­his­tor­y?c­oun­t=[­n]           | Returns last entries of audit history of rules for a specified dataso­urce.                                                                                |\n| POST                                                                                                                       | /druid­/co­ord­ina­tor­/v1­/ru­les­/{d­ata­Sou­rce­Name}                                | POST with a list of rules in JSON form to update rules.                                                                                                   |\n| Note that all interval URL parameters are ISO 8601 strings delimited by a _ instead of a / (e.g., 2016-0­6-2­7_2­016­-06­-28). |                                                                            |                                                                                                                                                          |\n\n| Master Server                                                                                                              |                                                  |                                                                                             |\n|-------------------------------|-----------------|------------------------|\n| Intervals                                                                                                                  |                                                  |                                                                                             |\n| GET                                                                                                                        | /druid­/co­ord­ina­tor­/v1­/in­tervals                   | Returns all intervals for all dataso­urces with total size and count.                         |\n| GET                                                                                                                        | /druid­/co­ord­ina­tor­/v1­/in­ter­val­s/{­int­erval}        | Returns aggregated total size and count for all intervals that intersect given isoint­erval.  |\n| GET                                                                                                                        | /druid­/co­ord­ina­tor­/v1­/in­ter­val­s/{­int­erv­al}­?simple | Returns total size and count for each interval within given isoint­erval.                     |\n| GET                                                                                                                        | /druid­/co­ord­ina­tor­/v1­/in­ter­val­s/{­int­erv­al}­?full   | Returns total size and count for each datasource for each interval within given isoint­erval. |\n| Note that all interval URL parameters are ISO 8601 strings delimited by a _ instead of a / (e.g., 2016-0­6-2­7_2­016­-06­-28). |                                                  |                                                                                             |\n\n| Master Server                                           |                                                                                       |                                                                                                              |\n|------------------|--------------------------|-----------------------------|\n| Compaction Config­uration                                |                                                                                       |                                                                                                              |\n| GET                                                     | /druid­/co­ord­ina­tor­/v1­/co­nfi­g/c­omp­action                                                | Returns all compaction configs.                                                                               |\n| GET                                                     | /druid­/co­ord­ina­tor­/v1­/co­nfi­g/c­omp­act­ion­/{d­ata­Source}                                   | Returns a compaction config of a dataSo­urce.                                                                  |\n| POST                                                    | /druid­/co­ord­ina­tor­/v1­/co­nfi­g/c­omp­act­ion­/ta­sks­lot­s?r­ati­o={­som­eRa­tio­}&­max­={s­ome­Max­Slots} | Update the capacity for compaction tasks. ratio and max are used to limit the max number of compaction tasks. |\n| POST                                                    | /druid­/co­ord­ina­tor­/v1­/co­nfi­g/c­omp­action                                                | Creates or updates the compaction config for a dataSo­urce.                                                    |\n| DELETE                                                  | /druid­/co­ord­ina­tor­/v1­/co­nfi­g/c­omp­act­ion­/{d­ata­Source}                                   | Removes the compaction config for a dataSo­urce.                                                               |\n| See Compaction Config­uration for config­uration details. |                                                                                       |                                                                                                              |\n\n| Master Server      |                                     |                                                                                                                                                                                                                                                                  |\n|-----------|--------------|------------------------------------------------|\n| Server Inform­ation |                                     |                                                                                                                                                                                                                                                                  |\n| GET                | /druid­/co­ord­ina­tor­/v1­/se­rvers        | Returns a list of servers URLs using the format {hostn­ame­}:{­port}.                                                                                                                                                                                                |\n| GET                | /druid­/co­ord­ina­tor­/v1­/se­rve­rs?­simple | Returns a list of server data objects in which each object has the following keys: host: host URL include ({host­nam­e}:­{port}) type: process type (index­er-­exe­cutor, histor­ical) currSize: storage size currently used maxSize: maximum storage size priority tier |\n\n| Overlord   |                           |                                                                       |\n|----------|--------------------|------------------------------------------|\n| Leadership |                           |                                                                       |\n| GET        | /druid­/in­dex­er/­v1/­leader   | Returns the current leader Overlord of the cluster.                    |\n| GET        | /druid­/in­dex­er/­v1/­isL­eader | This returns a JSON object with field \"­lea­der­\", either true or false |\n\n| Overlord |                                                            |                                                                                                               |\n|---------|-------------------------|--------------------------------------|\n| Tasks    |                                                            |                                                                                                               |\n| GET      | /druid­/in­dex­er/­v1/­tasks                                     | Retrieve list of tasks. Accepts query string parameters state, dataso­urce, create­dTi­meI­nte­rval, max, and type. |\n| GET      | /druid­/in­dex­er/­v1/­com­ple­teTasks                             | Retrieve list of complete tasks. Equivalent to /druid­/in­dex­er/­v1/­tas­ks?­sta­te=­com­plete.                         |\n| GET      | /druid­/in­dex­er/­v1/­run­nin­gTasks                              | Retrieve list of running tasks. Equivalent to /druid­/in­dex­er/­v1/­tas­ks?­sta­te=­run­ning.                           |\n| GET      | /druid­/in­dex­er/­v1/­wai­tin­gTasks                              | Retrieve list of waiting tasks. Equivalent to /druid­/in­dex­er/­v1/­tas­ks?­sta­te=­wai­ting.                           |\n| GET      | /druid­/in­dex­er/­v1/­pen­din­gTasks                              | Retrieve list of pending tasks. Equivalent to /druid­/in­dex­er/­v1/­tas­ks?­sta­te=­pen­ding.                           |\n| GET      | /druid­/in­dex­er/­v1/­tas­k/{­taskId}                             | Retrieve the 'payload' of a task.                                                                            |\n| GET      | /druid­/in­dex­er/­v1/­tas­k/{­tas­kId­}/s­tatus                      | Retrieve the status of a task.                                                                                 |\n| GET      | /druid­/in­dex­er/­v1/­tas­k/{­tas­kId­}/s­egments                    | Retrieve inform­ation about the segments of a task.                                                             |\n| GET      |                                                            | This API is deprecated and will be removed in future releases.                                                 |\n| GET      | /druid­/in­dex­er/­v1/­tas­k/{­tas­kId­}/r­eports                     | Retrieve a task completion report for a task. Only works for completed tasks.                                  |\n| POST     | /druid­/in­dex­er/­v1/task                                      | Endpoint for submitting tasks and supervisor specs to the Overlord. Returns the taskId of the submitted task.  |\n| POST     | /druid­/in­dex­er/­v1/­tas­k/{­tas­kId­}/s­hutdown                    | Shuts down a task.                                                                                             |\n| POST     | /druid­/in­dex­er/­v1/­dat­aso­urc­es/­{da­taS­our­ce}­/sh­utd­own­All­Tasks | Shuts down all tasks for a dataSo­urce.                                                                         |\n| POST     | /druid­/in­dex­er/­v1/­tas­kStatus                                | Retrieve list of task status objects for list of task id strings in request body.                              |\n| DELETE   | /druid­/in­dex­er/­v1/­pen­din­gSe­gme­nts­/{d­ata­Source}              | Manually clean up pending segments table in metadata storage for dataso­urce. Returns a JSON object.            |\n\n| Overlord    |                                                         |                                                                                                 |\n|---------|-------------------------|---------------------------------------|\n| Superv­isors |                                                         |                                                                                                 |\n| GET         | /druid­/in­dex­er/­v1/­sup­ervisor                             | Returns a list of strings of the currently active supervisor ids.                                |\n| GET         | /druid­/in­dex­er/­v1/­sup­erv­iso­r?full                        | Returns a list of objects of the currently active superv­isors.                                   |\n| GET         | /druid­/in­dex­er/­v1/­sup­erv­iso­r/[­sup­erv­iso­rId]           | Returns the current spec for the supervisor with the provided ID.                                |\n| GET         | /druid­/in­dex­er/­v1/­sup­erv­iso­r/[­sup­erv­iso­rId]/s­tatus    | Returns the current status of the supervisor with the provided ID.                               |\n| GET         | /druid­/in­dex­er/­v1/­sup­erv­iso­r/h­istory                     | Returns an audit history of specs for all superv­isors (current and past).                        |\n| GET         | /druid­/in­dex­er/­v1/­sup­erv­iso­r/[­sup­erv­iso­rId]/h­istory   | Returns an audit history of specs for the supervisor with the provided ID.                       |\n| POST        | /druid­/in­dex­er/­v1/­sup­ervisor                             | Suspend the current running supervisor of the provided ID. Responds with updated Superv­iso­rSpec. |\n| POST        | /druid­/in­dex­er/­v1/­sup­erv­iso­r/[­sup­erv­iso­rId]/s­uspend   | Suspend the current running supervisor of the provided ID. Responds with updated Superv­iso­rSpec. |\n| POST        | /druid­/in­dex­er/­v1/­sup­erv­iso­r/s­usp­endAll                  | Suspend all superv­isors at once.                                                                 |\n| POST        | /druid­/in­dex­er/­v1/­sup­erv­iso­r/[­sup­erv­iso­rId]/r­esume    | Resume indexing tasks for a superv­isor. Responds with updated Superv­iso­rSpec.                    |\n| POST        | /druid­/in­dex­er/­v1/­sup­erv­iso­r/r­esu­meAll                   | Resume all superv­isors at once.                                                                  |\n| POST        | /druid­/in­dex­er/­v1/­sup­erv­iso­r/[­sup­erv­iso­rId]/reset     | Reset the specified superv­isor.                                                                  |\n| POST        | /druid­/in­dex­er/­v1/­sup­erv­iso­r/[­sup­erv­iso­rId]/t­erm­inate | Terminate a supervisor of the provided ID.                                                       |\n| POST        | /druid­/in­dex­er/­v1/­sup­erv­iso­r/t­erm­ina­teAll                | Terminate all superv­isors at once.                                                               |\n| POST        | /druid­/in­dex­er/­v1/­sup­erv­iso­r/[­sup­erv­iso­rId]/s­hutdown  | Shutdown a superv­isor.                                                                           |\n| POST        | /druid­/in­dex­er/­v1/­sup­erv­iso­r/[­sup­erv­iso­rId]/s­uspend   | Suspend the current running supervisor of the provided ID. Responds with updated Superv­iso­rSpec. |\n\n| Overlord              |                                                                     |                                                                                                                                                                                       |\n|------------|---------------------|----------------------------------------|\n| Dynamic Config­uration |                                                                     |                                                                                                                                                                                       |\n| GET                   | /druid­/in­dex­er/­v1/­worker                                             | Retreives current overlord dynamic config­ura­tion.                                                                                                                                      |\n| GET                   | /druid­/in­dex­er/­v1/­wor­ker­/hi­sto­ry?­int­erv­al=­{in­ter­val­}&­cou­nte­r={­count} | Retrieves history of changes to overlord dynamic config­ura­tion. Accepts interval and count query string parameters to filter by interval and limit the number of results respec­tively. |\n| GET                   | /druid­/in­dex­er/­v1/­scaling                                            | Retrieves overlord scaling events if auto-s­caling runners are in use.                                                                                                                  |\n| POST                  | /druid­/in­dex­er/­v1/­worker                                             | Update overlord dynamic worker config­ura­tion.                                                                                                                                          |\n\n| Data Server   |                                        |                                                                                                     |\n|-----------|---------------------|-----------------------------------------|\n| Middle­Manager |                                        |                                                                                                     |\n| GET           | /druid­/wo­rke­r/v­1/e­nabled                | Check whether a Middle­Manager is in an enabled or disabled state                                     |\n| GET           | /druid­/wo­rke­r/v­1/tasks                  | Retrieve a list of active tasks being run on Middle­Man­ager.                                          |\n| GET           | /druid­/wo­rke­r/v­1/t­ask­/{t­ask­id}/log      | Retrieve task log output stream by task id                                                           |\n| POST          | /druid­/wo­rke­r/v­1/d­isable                | 'Disable' a Middle­Man­ager, causing it to stop accepting new tasks but complete all existing tasks. |\n| POST          | /druid­/wo­rke­r/v­1/e­nable                 | 'Enable' a Middle­Man­ager, allowing it to accept new tasks again if it was previously disabled.     |\n| POST          | /druid­/wo­rke­r/v­1/t­ask­/{t­ask­id}­/sh­utdown | Shutdown a running task by taskid.                                                                   |\n\n| Overlord |                                                 |                                                                                      |\n|---------|--------------------------|--------------------------------------|\n| Peon     |                                                 |                                                                                      |\n| GET      | /druid­/wo­rke­r/v­1/c­hat­/{t­ask­Id}­/ro­wStats          | Retrieve a live row stats report from a Peon. See task reports for more details.      |\n| GET      | /druid­/wo­rke­r/v­1/c­hat­/{t­ask­Id}­/un­par­sea­ble­Events | Retrieve an unpars­eable events report from a Peon. See task reports for more details. |\n\n| Data Server |                                |                                                                                                                                                                                                        |\n|--------|-------------|---------------------------------------------------|\n| Historical  | Segment Loading                 |                                                                                                                                                                                                        |\n| GET         | /druid­/hi­sto­ric­al/­v1/­loa­dstatus | Returns JSON of the form {\"ca­che­Ini­tia­liz­ed\":­}, where value is either true or false indicating if all segments in the local cache have been loaded.                                                  |\n| GET         | /druid­/hi­sto­ric­al/­v1/­rea­diness  | Similar to /druid­/hi­sto­ric­al/­v1/­loa­dst­atus, but instead of returning JSON with a flag, responses 200 OK if segments in the local cache have been loaded, and 503 SERVICE UNAVAI­LABLE, if they haven't. |\n\n| Query Server           |                                                                                                                      |                                                                                                                                                                                                                                                   |\n|-----------|------------------------|-------------------------------------|\n| Broker                 |                                                                                                                      |                                                                                                                                                                                                                                                   |\n| Datasource Inform­ation |                                                                                                                      |                                                                                                                                                                                                                                                   |\n| GET                    | /druid­/v2­/da­tas­ources                                                                                                 | Returns a list of queryable dataso­urces.                                                                                                                                                                                                           |\n| GET                    | /druid­/v2­/da­tas­our­ces­/{d­ata­Sou­rce­Name}                                                                                | Returns the dimensions and metrics of the dataso­urce.                                                                                                                                                                                              |\n|                       |                                                                                                                      | Option­ally, you can provide request parameter \"­ful­l\" to get list of served intervals with dimensions and metrics being served for those intervals. You can also provide request param \"­int­erv­al\" explicitly to refer to a particular interval. |\n| GET                    | /druid­/v2­/da­tas­our­ces­/{d­ata­Sou­rce­Nam­e}/­can­did­ate­s?i­nte­rva­ls=­{co­mma­-se­par­ate­d-i­nte­rva­ls}­&n­umC­and­ida­tes­={n­umC­and­idates} | Returns segment inform­ation lists including server locations for the given datasource and intervals. If \"­num­Can­did­ate­s\" is not specified, it will return all servers for each interval.                                                          |\n\n| Query Server |                            |                                                                               |\n|----------|------------------|--------------------------------------------|\n| Load Status  |                            |                                                                               |\n| GET          | /druid­/br­oke­r/v­1/l­oad­status | Returns a flag indicating if the Broker knows about all segments in Zookeeper. |\n\n| Query Server |                      |                                                                                               |\n|-----------|----------------|----------------------------------------------|\n| Queries      |                      |                                                                                               |\n| POST         | /druid/v2/            | The endpoint for submitting queries. Accepts an option ?pretty that pretty prints the results. |\n| POST         | /druid­/v2­/ca­ndi­dates/ | Returns segment inform­ation lists including server locations for the given query..             |\n\nSQL Cheat Sheet\n\n| Metadata Commands           |\n|-----------------------------|\n| SELECT * FROM sys.se­gments |\n| EXPLAIN PLAN FOR [­SQL]    |\n\n| INFORM­ATI­ON_­SCHEMA TABLES |\n|----------------------------|\n| SCHEMATA                   |\n| TABLES                     |\n| COLUMNS                    |\n\n| System Tables                                                                  |\n|------------------------------------------------------------------------|\n| sys.segments                                                                   |\n| sys.server_segments                                                            |\n| sys.tasks                                                                      |\n| The \"­sys­\" schema provides visibility into Druid segments, servers and tasks. |\n\n| SQL Types |                   |\n|-----------|--------------------|\n| SQL Type  | DRUID RUNTIME TYPE |\n| CHAR      | STRING             |\n| VARCHAR   | STRING             |\n| DECIMAL   | DOUBLE             |\n| FLOAT     | FLOAT              |\n| REAL      | DOUBLE             |\n| DOUBLE    | DOUBLE             |\n| BOOLEAN   | LONG               |\n| TINYINT   | LONG               |\n| SMALLINT  | LONG               |\n| INTEGER   | LONG               |\n| BIGINT    | LONG               |\n| TIMESTAMP | LONG               |\n| DATE      | LONG               |\n| OTHER     | COMPLEX            |\n\n| JDBC CONNECTOR                                                    |\n|-------------------------------------------------------------------|\n| jdbc:a­vat­ica­:re­mot­e:u­rl=­htt­p:/­/BR­OKE­R:8­082­/dr­uid­/v2­/sq­l/a­vat­ica/. |\n| You can make Druid SQL queries using the Avatica JDBC driver      |\n\n| Aggreg­ation Functions |\n|-----------------------|\n| COUNT(*)             |\n| COUNT(­DIS­TINCT expr)  |\n| SUM(expr)             |\n| MIN(expr)             |\n| MAX(expr)             |\n| AVG(expr)             |\n\n| Approx­imate Aggreg­ations                                                                                         |\n|------------------------------------------------------------------------|\n| APPROX­_CO­UNT­_DI­STI­NCT­(expr)                                                                                    |\n| APPROX­_CO­UNT­_DI­STI­NCT­_DS­_HL­L(expr, [lgK, tgtHll­Type])                                                      |\n| APPROX­_CO­UNT­_DI­STI­NCT­_DS­_TH­ETA­(expr, [size])                                                               |\n| APPROX­_QU­ANT­ILE­(expr, probab­ility, [resol­ution])                                                              |\n| APPROX­_QU­ANT­ILE­_DS­(expr, probab­ility, [k])                                                                   |\n| APPROX­_QU­ANT­ILE­_FI­XED­_BU­CKE­TS(­expr, probab­ility, numBuc­kets, lowerL­imit, upperL­imit, [outli­erH­and­lin­gMode]) |\n\n| Approx­imate Aggreg­ations                             |\n|------------------------------------------------------|\n| BLOOM_­FIL­TER­(expr, numEnt­ries)                      |\n| BLOOM_­FIL­TER­_TE­ST(­< ­ex­pr >, <­ se­ria­liz­ed-­fil­ter ­>) |\n\n### Comparison Operators\n```\nx = y \nx <> y \nx > y \nx >= y \nx < y \nx <= y \nx BETWEEN y AND z \nx NOT BETWEEN y AND z \nx LIKE pattern [ESCAPE esc]\nx NOT LIKE pattern [ESCAPE esc]\nx IS NULL \nx IS NOT NULL \nx IS TRUE \nx IS NOT TRUE \nx IS FALSE \nx IS NOT FALSE \nx IN (values)\nx NOT IN (values)\nx IN (subquery)\nx NOT IN (subquery)\nx AND y \nx OR y \nNOT x \n```\n\n### Other Functions\n```\nCAST(value AS TYPE)\nCASE expr WHEN value1 THEN result1 [ WHEN value2 THEN result2 ... ] [ ELSE resultN ] END\nCASE WHEN boolea­n_expr1 THEN result1 [ WHEN boolea­n_expr2 THEN result2 ... ] [ ELSE resultN ] END |\nNULLIF­(va­lue1, value2)\nCOALES­CE(­value1, value2, ...)\n```\n\n| Numeric Functions                                                                          |\n|------------------------------------------------------------------------|\n| ABS(expr)                                                                                  |\n| CEIL(expr)                                                                                 |\n| EXP(expr)                                                                                  |\n| FLOOR(­expr)                                                                                |\n| LN(expr)                                                                                   |\n| LOG10(­expr)                                                                                |\n| POWER(­expr, power)                                                                         |\n| SQRT(expr)                                                                                 |\n| TRUNCA­TE(­expr[, digits])                                                                 |\n| TRUNC(­expr[, digits])                                                                    |\n| x + y                                                                                      |\n| x - y                                                                                      |\n| x * y                                                                                     |\n| x / y                                                                                      |\n| MOD(x, y)                                                                                  |\n| Numeric functions will return 64 bit integers or 64 bit floats, depending on their inputs. |\n\n| String Functions                                                                |\n|------------------------------------------------------------------------|\n| CONCAT­(expr, expr...)                                                          |\n| TEXTCA­T(expr, expr)                                                             |\n| LENGTH­(expr)                                                                    |\n| CHAR_L­ENG­TH(­expr)                                                               |\n| CHARAC­TER­_LE­NGT­H(expr)                                                         |\n| STRLEN­(expr)                                                                    |\n| LOOKUP­(expr, lookup­Name)                                                        |\n| LOWER(­expr)                                                                     |\n| POSITI­ON(­needle IN haystack [FROM fromIn­dex])                                 |\n| REGEXP­_EX­TRA­CT(­expr, pattern, [index])                                       |\n| REPLAC­E(expr, pattern, replac­ement)                                             |\n| STRPOS­(ha­ystack, needle)                                                        |\n| SUBSTR­ING­(expr, index, [length])                                              |\n| SUBSTR­(expr, index, [length])                                                 |\n| TRIM([BOTH | LEADING | TRAILING] [< ­c­har­s > FROM] expr)                   |\n| BTRIM(­expr[, chars])                                                          |\n| LTRIM(­expr[, chars])                                                          |\n| UPPER(­expr)                                                                     |\n| String functions accept strings, and return a type approp­riate to the function. |\n\n| Time Functions                                                                |\n|------------------------------------------------------------------------|\n| CURREN­T_T­IME­STAMP                                                             |\n| CURREN­T_DATE                                                                  |\n| DATE_T­RUN­C                                      |\n| TIME_F­LOO­R |\n| TIME_S­HIF­T       |\n| TIME_E­XTR­ACT             |\n| TIME_P­ARS­E               |\n| TIME_F­ORM­AT            |\n| MILLIS­_TO­_TI­MES­TAM­P(m­ill­is_­expr)                                           |\n| TIMEST­AMP­_TO­_MI­LLI­S(t­ime­sta­mp_­expr)                                        |\n| EXTRAC­T(unit FROM timest­amp­_expr)                                        |\n| FLOOR(­tim­est­amp­_expr TO unit)                                            |\n| CEIL(t­ime­sta­mp_expr TO unit)                                              |\n| TIMEST­AMP­ADD­(unit, ­co­unt­, ti­mes­tam­p)                              |\n| timest­amp­_expr { + | - } in­ter­val­_ex­pr                                 |\n\n<https://imply.io/druid/cheat-sheet>\n","excerpt":"Cheatsheet Created: 2019-11-20 00:28:15 +0500 Modified: 2019-11-20 00:28:52 +0500 Common /status Returns the Druid version, loaded extens­i…","outboundReferences":[],"inboundReferences":[]},"tagsOutbound":{"nodes":[]}},"pageContext":{"tags":[],"slug":"/Databases/NoSQL-Databases/Druid/Cheatsheet/","sidebarItems":[{"title":"Categories","items":[{"title":"Computer-Science","url":"","items":[{"title":"Courses","url":"","items":[{"title":"365 Data Science Program","url":"/Computer-Science/Courses/365-Data-Science-Program/","items":[]},{"title":"365 DS - Advanced Stastistical Methods in Python","url":"/Computer-Science/Courses/365-DS---Advanced-Stastistical-Methods-in-Python/","items":[]},{"title":"365 DS - Mathematics","url":"/Computer-Science/Courses/365-DS---Mathematics/","items":[]},{"title":"Coursera - Algorithms Part - 1","url":"/Computer-Science/Courses/Coursera---Algorithms-Part---1/","items":[]},{"title":"Coursera - Algorithms Part - 2","url":"/Computer-Science/Courses/Coursera---Algorithms-Part---2/","items":[]},{"title":"Coursera - How Google does ML","url":"/Computer-Science/Courses/Coursera---How-Google-does-ML/","items":[]},{"title":"Data Integration Specialist - AWS","url":"/Computer-Science/Courses/Data-Integration-Specialist---AWS/","items":[]},{"title":"Intro to Microsoft Excel / Google Sheets","url":"/Computer-Science/Courses/Intro-to-Microsoft-Excel---Google-Sheets/","items":[]},{"title":"Mordern Algorithm Design","url":"/Computer-Science/Courses/Mordern-Algorithm-Design/","items":[]},{"title":"Nutanix Hybrid Cloud","url":"/Computer-Science/Courses/Nutanix-Hybrid-Cloud/","items":[]},{"title":"SE Radio","url":"/Computer-Science/Courses/SE-Radio/","items":[]},{"title":"Self-Driving Nanodegree","url":"/Computer-Science/Courses/Self-Driving-Nanodegree/","items":[]},{"title":"Udemy - Python for data structures algorithms","url":"/Computer-Science/Courses/Udemy---Python-for-data-structures-algorithms/","items":[]}]},{"title":"Decentralized-Applications","url":"","items":[{"title":"Bitcoin / Cryptocurrency / Web3","url":"/Computer-Science/Decentralized-Applications/Bitcoin---Cryptocurrency---Web3/","items":[]},{"title":"Blockchain","url":"/Computer-Science/Decentralized-Applications/Blockchain/","items":[]},{"title":"Ethereum","url":"/Computer-Science/Decentralized-Applications/Ethereum/","items":[]},{"title":"Intro","url":"/Computer-Science/Decentralized-Applications/Intro/","items":[]},{"title":"Others","url":"/Computer-Science/Decentralized-Applications/Others/","items":[]}]},{"title":"Distributed-System","url":"","items":[{"title":"CAP Theorem","url":"/Computer-Science/Distributed-System/CAP-Theorem/","items":[]},{"title":"Clocks","url":"/Computer-Science/Distributed-System/Clocks/","items":[]},{"title":"Consensus Protocols","url":"/Computer-Science/Distributed-System/Consensus-Protocols/","items":[]},{"title":"Consistency","url":"/Computer-Science/Distributed-System/Consistency/","items":[]},{"title":"Designing Distributed Systems","url":"/Computer-Science/Distributed-System/Designing-Distributed-Systems/","items":[]},{"title":"Distributed Logging","url":"/Computer-Science/Distributed-System/Distributed-Logging/","items":[]},{"title":"Fallacies and Problems","url":"/Computer-Science/Distributed-System/Fallacies-and-Problems/","items":[]},{"title":"Intro","url":"/Computer-Science/Distributed-System/Intro/","items":[]},{"title":"Others","url":"/Computer-Science/Distributed-System/Others/","items":[]},{"title":"Vocabulary","url":"/Computer-Science/Distributed-System/Vocabulary/","items":[]}]},{"title":"General","url":"","items":[{"title":"Coding Guidelines / Code Reviews / Clean Code","url":"/Computer-Science/General/Coding-Guidelines---Code-Reviews---Clean-Code/","items":[]},{"title":"Common","url":"/Computer-Science/General/Common/","items":[]},{"title":"Newsletter / Learning Resources","url":"/Computer-Science/General/Newsletter---Learning-Resources/","items":[]},{"title":"Others","url":"/Computer-Science/General/Others/","items":[]},{"title":"Outline","url":"/Computer-Science/General/Outline/","items":[]},{"title":"Standards","url":"/Computer-Science/General/Standards/","items":[]}]},{"title":"Interview-Question","url":"","items":[{"title":"Blogs / Conferences / Blogging / Presentation / Tech Thursdays","url":"/Computer-Science/Interview-Question/Blogs---Conferences---Blogging---Presentation---Tech-Thursdays/","items":[]},{"title":"Coding Interview Questions","url":"/Computer-Science/Interview-Question/Coding-Interview-Questions/","items":[]},{"title":"Others","url":"/Computer-Science/Interview-Question/Others/","items":[]},{"title":"System Design - Autocomplete or TypeAhead","url":"/Computer-Science/Interview-Question/System-Design---Autocomplete-or-TypeAhead/","items":[]},{"title":"System Design - Google Search","url":"/Computer-Science/Interview-Question/System-Design---Google-Search/","items":[]},{"title":"System Design - Messenger / WhatsApp","url":"/Computer-Science/Interview-Question/System-Design---Messenger---WhatsApp/","items":[]},{"title":"System Design - MMOG - Game","url":"/Computer-Science/Interview-Question/System-Design---MMOG---Game/","items":[]},{"title":"System Design - Others","url":"/Computer-Science/Interview-Question/System-Design---Others/","items":[]},{"title":"System Design - Parking Lot","url":"/Computer-Science/Interview-Question/System-Design---Parking-Lot/","items":[]},{"title":"System Design - TinyURL","url":"/Computer-Science/Interview-Question/System-Design---TinyURL/","items":[]},{"title":"System Design - Twitter","url":"/Computer-Science/Interview-Question/System-Design---Twitter/","items":[]},{"title":"System Design - Uber Lyft ride sharing services","url":"/Computer-Science/Interview-Question/System-Design---Uber-Lyft-ride-sharing-services/","items":[]},{"title":"TopTal","url":"/Computer-Science/Interview-Question/TopTal/","items":[]}]},{"title":"IoT","url":"","items":[{"title":"Device Management","url":"/Computer-Science/IoT/Device-Management/","items":[]},{"title":"Edge Computing","url":"/Computer-Science/IoT/Edge-Computing/","items":[]},{"title":"EdgeXFoundary","url":"/Computer-Science/IoT/EdgeXFoundary/","items":[]},{"title":"Industrial IoT (IIoT)","url":"/Computer-Science/IoT/Industrial-IoT-(IIoT)/","items":[]},{"title":"IoT Intro","url":"/Computer-Science/IoT/IoT-Intro/","items":[]},{"title":"Others","url":"/Computer-Science/IoT/Others/","items":[]}]},{"title":"Networking","url":"","items":[{"title":"MQTT","url":"","items":[{"title":"Client, Broker & Connection Establishment","url":"/Computer-Science/Networking/MQTT/Client,-Broker-&-Connection-Establishment/","items":[]},{"title":"Intro","url":"/Computer-Science/Networking/MQTT/Intro/","items":[]},{"title":"Keep Alive & Client Take-Over","url":"/Computer-Science/Networking/MQTT/Keep-Alive-&-Client-Take-Over/","items":[]},{"title":"Last Will and Testament","url":"/Computer-Science/Networking/MQTT/Last-Will-and-Testament/","items":[]},{"title":"Libraries","url":"/Computer-Science/Networking/MQTT/Libraries/","items":[]},{"title":"Messages","url":"/Computer-Science/Networking/MQTT/Messages/","items":[]},{"title":"MQTT - SN","url":"/Computer-Science/Networking/MQTT/MQTT---SN/","items":[]},{"title":"MQTT 5.0","url":"/Computer-Science/Networking/MQTT/MQTT-5.0/","items":[]},{"title":"MQTT over WebSockets","url":"/Computer-Science/Networking/MQTT/MQTT-over-WebSockets/","items":[]},{"title":"Others","url":"/Computer-Science/Networking/MQTT/Others/","items":[]},{"title":"Paho Client","url":"/Computer-Science/Networking/MQTT/Paho-Client/","items":[]},{"title":"Persistent Session & Queuing Messages","url":"/Computer-Science/Networking/MQTT/Persistent-Session-&-Queuing-Messages/","items":[]},{"title":"Publish Subscribe Pattern","url":"/Computer-Science/Networking/MQTT/Publish-Subscribe-Pattern/","items":[]},{"title":"Publish, Subscribe & Unsubscribe","url":"/Computer-Science/Networking/MQTT/Publish,-Subscribe-&-Unsubscribe/","items":[]},{"title":"QoS Levels","url":"/Computer-Science/Networking/MQTT/QoS-Levels/","items":[]},{"title":"Retained Messages","url":"/Computer-Science/Networking/MQTT/Retained-Messages/","items":[]},{"title":"Scaling","url":"/Computer-Science/Networking/MQTT/Scaling/","items":[]},{"title":"Security","url":"/Computer-Science/Networking/MQTT/Security/","items":[]},{"title":"Topics & Best Practices","url":"/Computer-Science/Networking/MQTT/Topics-&-Best-Practices/","items":[]}]},{"title":"Networking-Concepts","url":"","items":[{"title":"Addressing Methods / cast protocols","url":"/Computer-Science/Networking/Networking-Concepts/Addressing-Methods---cast-protocols/","items":[]},{"title":"Book - Computer Networks","url":"/Computer-Science/Networking/Networking-Concepts/Book---Computer-Networks/","items":[]},{"title":"CIDR","url":"/Computer-Science/Networking/Networking-Concepts/CIDR/","items":[]},{"title":"Data Center Networking","url":"/Computer-Science/Networking/Networking-Concepts/Data-Center-Networking/","items":[]},{"title":"Forward Error Correction","url":"/Computer-Science/Networking/Networking-Concepts/Forward-Error-Correction/","items":[]},{"title":"Intro","url":"/Computer-Science/Networking/Networking-Concepts/Intro/","items":[]},{"title":"IP","url":"/Computer-Science/Networking/Networking-Concepts/IP/","items":[]},{"title":"Network Sockets/Ports","url":"/Computer-Science/Networking/Networking-Concepts/Network-Sockets-Ports/","items":[]},{"title":"Networking Fabric","url":"/Computer-Science/Networking/Networking-Concepts/Networking-Fabric/","items":[]},{"title":"OSI Layers","url":"/Computer-Science/Networking/Networking-Concepts/OSI-Layers/","items":[]},{"title":"Others","url":"/Computer-Science/Networking/Networking-Concepts/Others/","items":[]},{"title":"Questions","url":"/Computer-Science/Networking/Networking-Concepts/Questions/","items":[]},{"title":"Routing","url":"/Computer-Science/Networking/Networking-Concepts/Routing/","items":[]},{"title":"Sockets","url":"/Computer-Science/Networking/Networking-Concepts/Sockets/","items":[]},{"title":"TCP/IP","url":"/Computer-Science/Networking/Networking-Concepts/TCP-IP/","items":[]}]},{"title":"Others","url":"","items":[{"title":"5G Wireless Networking","url":"/Computer-Science/Networking/Others/5G-Wireless-Networking/","items":[]},{"title":"Apache Avro","url":"/Computer-Science/Networking/Others/Apache-Avro/","items":[]},{"title":"Apache Parquet","url":"/Computer-Science/Networking/Others/Apache-Parquet/","items":[]},{"title":"Comparisions","url":"/Computer-Science/Networking/Others/Comparisions/","items":[]},{"title":"Data formats","url":"/Computer-Science/Networking/Others/Data-formats/","items":[]},{"title":"Falcor","url":"/Computer-Science/Networking/Others/Falcor/","items":[]},{"title":"File Formats","url":"/Computer-Science/Networking/Others/File-Formats/","items":[]},{"title":"gRPC","url":"/Computer-Science/Networking/Others/gRPC/","items":[{"title":"Commands","url":"/Computer-Science/Networking/Others/gRPC/Commands/","items":[]},{"title":"Comparision","url":"/Computer-Science/Networking/Others/gRPC/Comparision/","items":[]},{"title":"Concepts","url":"/Computer-Science/Networking/Others/gRPC/Concepts/","items":[]},{"title":"Guides","url":"/Computer-Science/Networking/Others/gRPC/Guides/","items":[]},{"title":"Others","url":"/Computer-Science/Networking/Others/gRPC/Others/","items":[]}]},{"title":"Others","url":"/Computer-Science/Networking/Others/Others/","items":[]},{"title":"Protocol Buffers Protobuf","url":"/Computer-Science/Networking/Others/Protocol-Buffers-Protobuf/","items":[]},{"title":"RPC","url":"/Computer-Science/Networking/Others/RPC/","items":[]},{"title":"Serialization/Deserialization","url":"/Computer-Science/Networking/Others/Serialization-Deserialization/","items":[]},{"title":"VPN","url":"/Computer-Science/Networking/Others/VPN/","items":[]}]},{"title":"Protocols","url":"","items":[{"title":"AMQP","url":"/Computer-Science/Networking/Protocols/AMQP/","items":[]},{"title":"DNS Domain Name System","url":"/Computer-Science/Networking/Protocols/DNS-Domain-Name-System/","items":[]},{"title":"GraphQL","url":"/Computer-Science/Networking/Protocols/GraphQL/","items":[]},{"title":"HTTP / HTTPS","url":"/Computer-Science/Networking/Protocols/HTTP---HTTPS/","items":[]},{"title":"Http Status Code","url":"/Computer-Science/Networking/Protocols/Http-Status-Code/","items":[]},{"title":"HTTP/3 QUIC","url":"/Computer-Science/Networking/Protocols/HTTP-3-QUIC/","items":[]},{"title":"Messaging","url":"/Computer-Science/Networking/Protocols/Messaging/","items":[]},{"title":"OpenAPI","url":"/Computer-Science/Networking/Protocols/OpenAPI/","items":[]},{"title":"OpenThread","url":"/Computer-Science/Networking/Protocols/OpenThread/","items":[]},{"title":"Others","url":"/Computer-Science/Networking/Protocols/Others/","items":[]},{"title":"Protocols","url":"/Computer-Science/Networking/Protocols/Protocols/","items":[]},{"title":"Protocols Intro","url":"/Computer-Science/Networking/Protocols/Protocols-Intro/","items":[]},{"title":"REST Representational State Transfer / RESTFul","url":"/Computer-Science/Networking/Protocols/REST-Representational-State-Transfer---RESTFul/","items":[]},{"title":"Rsocket","url":"/Computer-Science/Networking/Protocols/Rsocket/","items":[]},{"title":"TCP (Connection Oriented Protocol)","url":"/Computer-Science/Networking/Protocols/TCP-(Connection-Oriented-Protocol)/","items":[{"title":"Flow Control","url":"/Computer-Science/Networking/Protocols/TCP-(Connection-Oriented-Protocol)/Flow-Control/","items":[]}]},{"title":"UDP","url":"/Computer-Science/Networking/Protocols/UDP/","items":[]},{"title":"Video / Live Streaming","url":"/Computer-Science/Networking/Protocols/Video---Live-Streaming/","items":[]},{"title":"Weave","url":"/Computer-Science/Networking/Protocols/Weave/","items":[]},{"title":"WebSockets","url":"/Computer-Science/Networking/Protocols/WebSockets/","items":[]},{"title":"ZeroMQ: Distributed Messaging","url":"/Computer-Science/Networking/Protocols/ZeroMQ--Distributed-Messaging/","items":[]}]}]},{"title":"Operating-System","url":"","items":[{"title":"Basic Computer Organization","url":"/Computer-Science/Operating-System/Basic-Computer-Organization/","items":[]},{"title":"Caches / Caching","url":"/Computer-Science/Operating-System/Caches---Caching/","items":[]},{"title":"Compilers","url":"/Computer-Science/Operating-System/Compilers/","items":[]},{"title":"Concepts","url":"/Computer-Science/Operating-System/Concepts/","items":[]},{"title":"Concurrency / Threading","url":"/Computer-Science/Operating-System/Concurrency---Threading/","items":[]},{"title":"Concurrency Models - Async","url":"/Computer-Science/Operating-System/Concurrency-Models---Async/","items":[]},{"title":"Concurrency Problems","url":"/Computer-Science/Operating-System/Concurrency-Problems/","items":[]},{"title":"Coroutines","url":"/Computer-Science/Operating-System/Coroutines/","items":[]},{"title":"CPU | GPU | TPU","url":"/Computer-Science/Operating-System/CPU---GPU---TPU/","items":[]},{"title":"Disk IO","url":"/Computer-Science/Operating-System/Disk-IO/","items":[]},{"title":"DRAM","url":"/Computer-Science/Operating-System/DRAM/","items":[]},{"title":"Intro","url":"/Computer-Science/Operating-System/Intro/","items":[]},{"title":"Journaling File System","url":"/Computer-Science/Operating-System/Journaling-File-System/","items":[]},{"title":"Memory","url":"/Computer-Science/Operating-System/Memory/","items":[]},{"title":"Memory Allocation","url":"/Computer-Science/Operating-System/Memory-Allocation/","items":[]},{"title":"Memory Layout","url":"/Computer-Science/Operating-System/Memory-Layout/","items":[]},{"title":"Memory Mapping mmap","url":"/Computer-Science/Operating-System/Memory-Mapping-mmap/","items":[]},{"title":"Microprocessor","url":"/Computer-Science/Operating-System/Microprocessor/","items":[]},{"title":"Others","url":"/Computer-Science/Operating-System/Others/","items":[]},{"title":"Parallel Processing","url":"/Computer-Science/Operating-System/Parallel-Processing/","items":[]},{"title":"RAID","url":"/Computer-Science/Operating-System/RAID/","items":[]},{"title":"Scheduling","url":"/Computer-Science/Operating-System/Scheduling/","items":[]},{"title":"Swap / Paging / Caching","url":"/Computer-Science/Operating-System/Swap---Paging---Caching/","items":[]},{"title":"Unix / Linux","url":"/Computer-Science/Operating-System/Unix---Linux/","items":[]},{"title":"Unix / Linux File System","url":"/Computer-Science/Operating-System/Unix---Linux-File-System/","items":[]},{"title":"Write Ahead Log, WAL","url":"/Computer-Science/Operating-System/Write-Ahead-Log,-WAL/","items":[]}]},{"title":"Others","url":"","items":[{"title":"BioInformatics/BioTechnology","url":"/Computer-Science/Others/BioInformatics-BioTechnology/","items":[]},{"title":"Computer Graphics","url":"/Computer-Science/Others/Computer-Graphics/","items":[]},{"title":"Digital Circuits","url":"/Computer-Science/Others/Digital-Circuits/","items":[]},{"title":"Game Development","url":"/Computer-Science/Others/Game-Development/","items":[]},{"title":"Others","url":"/Computer-Science/Others/Others/","items":[]},{"title":"Tech Books","url":"/Computer-Science/Others/Tech-Books/","items":[]}]},{"title":"Programming-Concepts","url":"","items":[{"title":"Cohesion and Coupling","url":"/Computer-Science/Programming-Concepts/Cohesion-and-Coupling/","items":[]},{"title":"Dependency Injection","url":"/Computer-Science/Programming-Concepts/Dependency-Injection/","items":[]},{"title":"Inversion of Control","url":"/Computer-Science/Programming-Concepts/Inversion-of-Control/","items":[]},{"title":"Marshalling","url":"/Computer-Science/Programming-Concepts/Marshalling/","items":[]},{"title":"Metaprogramming","url":"/Computer-Science/Programming-Concepts/Metaprogramming/","items":[]},{"title":"Others","url":"/Computer-Science/Programming-Concepts/Others/","items":[]},{"title":"Programming Styles","url":"/Computer-Science/Programming-Concepts/Programming-Styles/","items":[]},{"title":"Software/Coding / Development/Engineering","url":"/Computer-Science/Programming-Concepts/Software-Coding---Development-Engineering/","items":[{"title":"Code Smell","url":"/Computer-Science/Programming-Concepts/Software-Coding---Development-Engineering/Code-Smell/","items":[]},{"title":"Static Code Analysis","url":"/Computer-Science/Programming-Concepts/Software-Coding---Development-Engineering/Static-Code-Analysis/","items":[]}]},{"title":"Type Introspection and Reflection","url":"/Computer-Science/Programming-Concepts/Type-Introspection-and-Reflection/","items":[]},{"title":"Type Systems","url":"/Computer-Science/Programming-Concepts/Type-Systems/","items":[]}]},{"title":"Programming-Paradigms","url":"","items":[{"title":"Architectural - MVVM","url":"/Computer-Science/Programming-Paradigms/Architectural---MVVM/","items":[]},{"title":"Behavioral - Chain of Responsibility","url":"/Computer-Science/Programming-Paradigms/Behavioral---Chain-of-Responsibility/","items":[]},{"title":"Behavioral - Iterator","url":"/Computer-Science/Programming-Paradigms/Behavioral---Iterator/","items":[]},{"title":"Behavioral - Mediator","url":"/Computer-Science/Programming-Paradigms/Behavioral---Mediator/","items":[]},{"title":"Behavioral - Memento","url":"/Computer-Science/Programming-Paradigms/Behavioral---Memento/","items":[]},{"title":"Behavioral - Observer","url":"/Computer-Science/Programming-Paradigms/Behavioral---Observer/","items":[]},{"title":"Behavioral - Publisher Subscriber","url":"/Computer-Science/Programming-Paradigms/Behavioral---Publisher-Subscriber/","items":[]},{"title":"Behavioral - State","url":"/Computer-Science/Programming-Paradigms/Behavioral---State/","items":[]},{"title":"Behavioral - Strategy","url":"/Computer-Science/Programming-Paradigms/Behavioral---Strategy/","items":[]},{"title":"Concurrency - Reactor","url":"/Computer-Science/Programming-Paradigms/Concurrency---Reactor/","items":[]},{"title":"Creational - Abstract Factory","url":"/Computer-Science/Programming-Paradigms/Creational---Abstract-Factory/","items":[]},{"title":"Creational - Object Pool","url":"/Computer-Science/Programming-Paradigms/Creational---Object-Pool/","items":[]},{"title":"Design Patterns","url":"/Computer-Science/Programming-Paradigms/Design-Patterns/","items":[]},{"title":"Functional Programming","url":"/Computer-Science/Programming-Paradigms/Functional-Programming/","items":[]},{"title":"OOPS / SOLID","url":"/Computer-Science/Programming-Paradigms/OOPS---SOLID/","items":[]},{"title":"Others","url":"/Computer-Science/Programming-Paradigms/Others/","items":[]},{"title":"References","url":"/Computer-Science/Programming-Paradigms/References/","items":[]},{"title":"Structural -  Facade","url":"/Computer-Science/Programming-Paradigms/Structural----Facade/","items":[]},{"title":"Structural - Adapter","url":"/Computer-Science/Programming-Paradigms/Structural---Adapter/","items":[]},{"title":"Structural - Bridge","url":"/Computer-Science/Programming-Paradigms/Structural---Bridge/","items":[]},{"title":"Structural - Decorator","url":"/Computer-Science/Programming-Paradigms/Structural---Decorator/","items":[]},{"title":"Structural - Proxy","url":"/Computer-Science/Programming-Paradigms/Structural---Proxy/","items":[]},{"title":"Types of programming paradigm","url":"/Computer-Science/Programming-Paradigms/Types-of-programming-paradigm/","items":[]}]},{"title":"Security","url":"","items":[{"title":"Attacks","url":"/Computer-Science/Security/Attacks/","items":[]},{"title":"Authentication","url":"/Computer-Science/Security/Authentication/","items":[{"title":"Certificates","url":"/Computer-Science/Security/Authentication/Certificates/","items":[]},{"title":"HTTP Authentication","url":"/Computer-Science/Security/Authentication/HTTP-Authentication/","items":[]},{"title":"JWT","url":"/Computer-Science/Security/Authentication/JWT/","items":[]},{"title":"OAuth","url":"/Computer-Science/Security/Authentication/OAuth/","items":[]},{"title":"OpenID","url":"/Computer-Science/Security/Authentication/OpenID/","items":[]}]},{"title":"Concepts","url":"/Computer-Science/Security/Concepts/","items":[]},{"title":"Cryptography Intro","url":"/Computer-Science/Security/Cryptography-Intro/","items":[{"title":"Cryptographic Algorithms","url":"/Computer-Science/Security/Cryptography-Intro/Cryptographic-Algorithms/","items":[]},{"title":"Cryptographic Hash Functions","url":"/Computer-Science/Security/Cryptography-Intro/Cryptographic-Hash-Functions/","items":[]},{"title":"Cryptography Terms","url":"/Computer-Science/Security/Cryptography-Intro/Cryptography-Terms/","items":[]},{"title":"Diffie-Hellman Key Exchange","url":"/Computer-Science/Security/Cryptography-Intro/Diffie-Hellman-Key-Exchange/","items":[]},{"title":"Public-key cryptography","url":"/Computer-Science/Security/Cryptography-Intro/Public-key-cryptography/","items":[]}]},{"title":"Ethical Hacking","url":"/Computer-Science/Security/Ethical-Hacking/","items":[]},{"title":"Firewall WAF","url":"/Computer-Science/Security/Firewall-WAF/","items":[]},{"title":"Others","url":"/Computer-Science/Security/Others/","items":[]},{"title":"Systems Protection","url":"/Computer-Science/Security/Systems-Protection/","items":[]},{"title":"Tools","url":"/Computer-Science/Security/Tools/","items":[]},{"title":"Vault","url":"/Computer-Science/Security/Vault/","items":[]},{"title":"Vulnerabilities","url":"/Computer-Science/Security/Vulnerabilities/","items":[]}]},{"title":"System-Design","url":"","items":[{"title":"Addressing Failures","url":"/Computer-Science/System-Design/Addressing-Failures/","items":[]},{"title":"API Gateway","url":"/Computer-Science/System-Design/API-Gateway/","items":[]},{"title":"Architecture Guide","url":"/Computer-Science/System-Design/Architecture-Guide/","items":[{"title":"N-Tier Application Architecture","url":"/Computer-Science/System-Design/Architecture-Guide/N-Tier-Application-Architecture/","items":[]}]},{"title":"Cloud Native","url":"/Computer-Science/System-Design/Cloud-Native/","items":[]},{"title":"Enterprise Integration Patterns","url":"/Computer-Science/System-Design/Enterprise-Integration-Patterns/","items":[]},{"title":"Event driven architecture","url":"/Computer-Science/System-Design/Event-driven-architecture/","items":[]},{"title":"Intro","url":"/Computer-Science/System-Design/Intro/","items":[]},{"title":"Lambda Architecture","url":"/Computer-Science/System-Design/Lambda-Architecture/","items":[]},{"title":"Microservice Architecture","url":"/Computer-Science/System-Design/Microservice-Architecture/","items":[{"title":"Design Patterns","url":"/Computer-Science/System-Design/Microservice-Architecture/Design-Patterns/","items":[]},{"title":"Domain Driven Design","url":"/Computer-Science/System-Design/Microservice-Architecture/Domain-Driven-Design/","items":[]},{"title":"Example","url":"/Computer-Science/System-Design/Microservice-Architecture/Example/","items":[]}]},{"title":"Others","url":"/Computer-Science/System-Design/Others/","items":[]},{"title":"Rate Limiting","url":"/Computer-Science/System-Design/Rate-Limiting/","items":[]},{"title":"Reactive Microservices / Manifesto","url":"/Computer-Science/System-Design/Reactive-Microservices---Manifesto/","items":[]},{"title":"Serverless Architecture","url":"/Computer-Science/System-Design/Serverless-Architecture/","items":[]},{"title":"Trade offs","url":"/Computer-Science/System-Design/Trade-offs/","items":[]},{"title":"Twelve-Factor App","url":"/Computer-Science/System-Design/Twelve-Factor-App/","items":[]}]},{"title":"Testing","url":"","items":[{"title":"Intro","url":"/Computer-Science/Testing/Intro/","items":[]},{"title":"iperf3 Testing","url":"/Computer-Science/Testing/iperf3-Testing/","items":[]},{"title":"Load / Performance Testing/QA Tools","url":"/Computer-Science/Testing/Load---Performance-Testing-QA-Tools/","items":[]},{"title":"Mocking","url":"/Computer-Science/Testing/Mocking/","items":[]},{"title":"Postman","url":"/Computer-Science/Testing/Postman/","items":[]},{"title":"Terms","url":"/Computer-Science/Testing/Terms/","items":[]},{"title":"Test Pyramid","url":"/Computer-Science/Testing/Test-Pyramid/","items":[]},{"title":"Tools","url":"/Computer-Science/Testing/Tools/","items":[]}]}]},{"title":"Data-Structures","url":"","items":[{"title":"General","url":"","items":[{"title":"Data","url":"/Data-Structures/General/Data/","items":[]},{"title":"Disjoint-Set Data Structure","url":"/Data-Structures/General/Disjoint-Set-Data-Structure/","items":[]},{"title":"DS Intro","url":"/Data-Structures/General/DS-Intro/","items":[]},{"title":"Elementary Symbol Tables","url":"/Data-Structures/General/Elementary-Symbol-Tables/","items":[]},{"title":"Endianness","url":"/Data-Structures/General/Endianness/","items":[]},{"title":"Mutable/Immutable Data Structures","url":"/Data-Structures/General/Mutable-Immutable-Data-Structures/","items":[]}]},{"title":"Graph","url":"","items":[{"title":"Adjacency List","url":"/Data-Structures/Graph/Adjacency-List/","items":[]},{"title":"Adjacency Matrix","url":"/Data-Structures/Graph/Adjacency-Matrix/","items":[]},{"title":"Digraphs (Directed Graphs)","url":"/Data-Structures/Graph/Digraphs-(Directed-Graphs)/","items":[]},{"title":"Implementation","url":"/Data-Structures/Graph/Implementation/","items":[]},{"title":"Intro","url":"/Data-Structures/Graph/Intro/","items":[]},{"title":"Questions","url":"/Data-Structures/Graph/Questions/","items":[]},{"title":"Undirected Graph","url":"/Data-Structures/Graph/Undirected-Graph/","items":[]}]},{"title":"HashTable","url":"","items":[{"title":"Bloom Filters","url":"/Data-Structures/HashTable/Bloom-Filters/","items":[]},{"title":"Chord","url":"/Data-Structures/HashTable/Chord/","items":[]},{"title":"Count-min Sketch","url":"/Data-Structures/HashTable/Count-min-Sketch/","items":[]},{"title":"DHT - Distributed Hash Tables","url":"/Data-Structures/HashTable/DHT---Distributed-Hash-Tables/","items":[]},{"title":"Dictionaries","url":"/Data-Structures/HashTable/Dictionaries/","items":[]},{"title":"Hash Functions","url":"/Data-Structures/HashTable/Hash-Functions/","items":[]},{"title":"Hash Tables","url":"/Data-Structures/HashTable/Hash-Tables/","items":[]},{"title":"Hashing","url":"/Data-Structures/HashTable/Hashing/","items":[]},{"title":"Hashing Techniques","url":"/Data-Structures/HashTable/Hashing-Techniques/","items":[]},{"title":"HyperLogLog","url":"/Data-Structures/HashTable/HyperLogLog/","items":[]},{"title":"Kademlia","url":"/Data-Structures/HashTable/Kademlia/","items":[]},{"title":"List of Hash Functions","url":"/Data-Structures/HashTable/List-of-Hash-Functions/","items":[]},{"title":"Merkle Trees","url":"/Data-Structures/HashTable/Merkle-Trees/","items":[]},{"title":"Probabilistic Data Structure","url":"/Data-Structures/HashTable/Probabilistic-Data-Structure/","items":[]},{"title":"Questions","url":"/Data-Structures/HashTable/Questions/","items":[]}]},{"title":"Hierarchical-Data-Structure","url":"","items":[{"title":"2-3 Search Trees","url":"/Data-Structures/Hierarchical-Data-Structure/2-3-Search-Trees/","items":[]},{"title":"AVL Tree","url":"/Data-Structures/Hierarchical-Data-Structure/AVL-Tree/","items":[]},{"title":"B-Tree","url":"/Data-Structures/Hierarchical-Data-Structure/B-Tree/","items":[]},{"title":"Beap (Bi-Parental Heap)","url":"/Data-Structures/Hierarchical-Data-Structure/Beap-(Bi-Parental-Heap)/","items":[]},{"title":"Binary Heap","url":"/Data-Structures/Hierarchical-Data-Structure/Binary-Heap/","items":[]},{"title":"Binary Search Tree","url":"/Data-Structures/Hierarchical-Data-Structure/Binary-Search-Tree/","items":[]},{"title":"Binary Tree","url":"/Data-Structures/Hierarchical-Data-Structure/Binary-Tree/","items":[]},{"title":"Binomial Heap","url":"/Data-Structures/Hierarchical-Data-Structure/Binomial-Heap/","items":[]},{"title":"Fibonacci Heap","url":"/Data-Structures/Hierarchical-Data-Structure/Fibonacci-Heap/","items":[]},{"title":"Interval Search Tree","url":"/Data-Structures/Hierarchical-Data-Structure/Interval-Search-Tree/","items":[]},{"title":"k-ary heap / d-ary heap / d-way heap","url":"/Data-Structures/Hierarchical-Data-Structure/k-ary-heap---d-ary-heap---d-way-heap/","items":[]},{"title":"Kd-trees","url":"/Data-Structures/Hierarchical-Data-Structure/Kd-trees/","items":[]},{"title":"Left Leaning Red-Black BSTs (LLRB tree)","url":"/Data-Structures/Hierarchical-Data-Structure/Left-Leaning-Red-Black-BSTs-(LLRB-tree)/","items":[]},{"title":"Problems","url":"/Data-Structures/Hierarchical-Data-Structure/Problems/","items":[]},{"title":"Segment Tree","url":"/Data-Structures/Hierarchical-Data-Structure/Segment-Tree/","items":[]},{"title":"Space-partitioning trees","url":"/Data-Structures/Hierarchical-Data-Structure/Space-partitioning-trees/","items":[]},{"title":"Tree DS","url":"/Data-Structures/Hierarchical-Data-Structure/Tree-DS/","items":[]}]},{"title":"Linear-Data-Structure","url":"","items":[{"title":"Array","url":"/Data-Structures/Linear-Data-Structure/Array/","items":[]},{"title":"Bag Data Structure","url":"/Data-Structures/Linear-Data-Structure/Bag-Data-Structure/","items":[]},{"title":"Circular Buffer","url":"/Data-Structures/Linear-Data-Structure/Circular-Buffer/","items":[]},{"title":"Dequeue","url":"/Data-Structures/Linear-Data-Structure/Dequeue/","items":[]},{"title":"Indexed Priority Queue","url":"/Data-Structures/Linear-Data-Structure/Indexed-Priority-Queue/","items":[]},{"title":"Linked List","url":"/Data-Structures/Linear-Data-Structure/Linked-List/","items":[]},{"title":"Priority Queue","url":"/Data-Structures/Linear-Data-Structure/Priority-Queue/","items":[]},{"title":"Problems","url":"/Data-Structures/Linear-Data-Structure/Problems/","items":[]},{"title":"Queue FIFO","url":"/Data-Structures/Linear-Data-Structure/Queue-FIFO/","items":[]},{"title":"Randomized Queue","url":"/Data-Structures/Linear-Data-Structure/Randomized-Queue/","items":[]},{"title":"Sets","url":"/Data-Structures/Linear-Data-Structure/Sets/","items":[]},{"title":"Skip Lists","url":"/Data-Structures/Linear-Data-Structure/Skip-Lists/","items":[]},{"title":"Stack LIFO","url":"/Data-Structures/Linear-Data-Structure/Stack-LIFO/","items":[]}]},{"title":"Others","url":"","items":[{"title":"Bitmap","url":"/Data-Structures/Others/Bitmap/","items":[]},{"title":"LSM (Log Structured Merge Trees)","url":"/Data-Structures/Others/LSM-(Log-Structured-Merge-Trees)/","items":[]},{"title":"SSTables, Sorted String Tables","url":"/Data-Structures/Others/SSTables,-Sorted-String-Tables/","items":[]}]},{"title":"Trie","url":"","items":[{"title":"Compressed Trie","url":"/Data-Structures/Trie/Compressed-Trie/","items":[]},{"title":"Others","url":"/Data-Structures/Trie/Others/","items":[]},{"title":"Patricia Trie","url":"/Data-Structures/Trie/Patricia-Trie/","items":[]},{"title":"Questions","url":"/Data-Structures/Trie/Questions/","items":[]},{"title":"R-way Tries","url":"/Data-Structures/Trie/R-way-Tries/","items":[]},{"title":"Standard Trie","url":"/Data-Structures/Trie/Standard-Trie/","items":[]},{"title":"Suffix Array","url":"/Data-Structures/Trie/Suffix-Array/","items":[]},{"title":"Suffix Tree","url":"/Data-Structures/Trie/Suffix-Tree/","items":[]},{"title":"Ternary Search Tries (TST)","url":"/Data-Structures/Trie/Ternary-Search-Tries-(TST)/","items":[]}]}]},{"title":"Databases","url":"","items":[{"title":"Concepts","url":"","items":[{"title":"ACID and BASE","url":"/Databases/Concepts/ACID-and-BASE/","items":[]},{"title":"Concepts","url":"/Databases/Concepts/Concepts/","items":[]},{"title":"Concurrency Control","url":"/Databases/Concepts/Concurrency-Control/","items":[]},{"title":"Disk oriented vs in-memory DBs","url":"/Databases/Concepts/Disk-oriented-vs-in-memory-DBs/","items":[]},{"title":"History","url":"/Databases/Concepts/History/","items":[]},{"title":"Indexing","url":"/Databases/Concepts/Indexing/","items":[{"title":"Database Index","url":"/Databases/Concepts/Indexing/Database-Index/","items":[]},{"title":"Inverted Index","url":"/Databases/Concepts/Indexing/Inverted-Index/","items":[]},{"title":"MySQL Indexing","url":"/Databases/Concepts/Indexing/MySQL-Indexing/","items":[]}]},{"title":"Intro","url":"/Databases/Concepts/Intro/","items":[]},{"title":"Isolation Levels","url":"/Databases/Concepts/Isolation-Levels/","items":[]},{"title":"MVCC, MultiVersion Concurrency Control","url":"/Databases/Concepts/MVCC,-MultiVersion-Concurrency-Control/","items":[]},{"title":"Others","url":"/Databases/Concepts/Others/","items":[]},{"title":"RUM Conjecture","url":"/Databases/Concepts/RUM-Conjecture/","items":[]},{"title":"Types of Databases","url":"/Databases/Concepts/Types-of-Databases/","items":[]}]},{"title":"Modeling","url":"","items":[{"title":"Data Modeling","url":"/Databases/Modeling/Data-Modeling/","items":[]},{"title":"Database Workloads","url":"/Databases/Modeling/Database-Workloads/","items":[]},{"title":"ER - Tools","url":"/Databases/Modeling/ER---Tools/","items":[]},{"title":"ER Diagrams (Entity Relationships)","url":"/Databases/Modeling/ER-Diagrams-(Entity-Relationships)/","items":[]}]},{"title":"NoSQL-Databases","url":"","items":[{"title":"AWS DynamoDB","url":"/Databases/NoSQL-Databases/AWS-DynamoDB/","items":[{"title":"Cheetsheet","url":"/Databases/NoSQL-Databases/AWS-DynamoDB/Cheetsheet/","items":[]},{"title":"Core components","url":"/Databases/NoSQL-Databases/AWS-DynamoDB/Core-components/","items":[]},{"title":"Documentation","url":"/Databases/NoSQL-Databases/AWS-DynamoDB/Documentation/","items":[]},{"title":"Others","url":"/Databases/NoSQL-Databases/AWS-DynamoDB/Others/","items":[]},{"title":"Working","url":"/Databases/NoSQL-Databases/AWS-DynamoDB/Working/","items":[]}]},{"title":"Cassandra","url":"/Databases/NoSQL-Databases/Cassandra/","items":[{"title":"Commands","url":"/Databases/NoSQL-Databases/Cassandra/Commands/","items":[]},{"title":"Consistency","url":"/Databases/NoSQL-Databases/Cassandra/Consistency/","items":[]},{"title":"CQL (Cassandra Query Language)","url":"/Databases/NoSQL-Databases/Cassandra/CQL-(Cassandra-Query-Language)/","items":[]},{"title":"Data Model","url":"/Databases/NoSQL-Databases/Cassandra/Data-Model/","items":[]},{"title":"Design","url":"/Databases/NoSQL-Databases/Cassandra/Design/","items":[]},{"title":"Drivers / Clients","url":"/Databases/NoSQL-Databases/Cassandra/Drivers---Clients/","items":[]},{"title":"Questions","url":"/Databases/NoSQL-Databases/Cassandra/Questions/","items":[]},{"title":"Working","url":"/Databases/NoSQL-Databases/Cassandra/Working/","items":[]}]},{"title":"Column family","url":"/Databases/NoSQL-Databases/Column-family/","items":[]},{"title":"Druid","url":"/Databases/NoSQL-Databases/Druid/","items":[{"title":"Architecture","url":"/Databases/NoSQL-Databases/Druid/Architecture/","items":[]},{"title":"Cheatsheet","url":"/Databases/NoSQL-Databases/Druid/Cheatsheet/","items":[]},{"title":"Commands","url":"/Databases/NoSQL-Databases/Druid/Commands/","items":[]},{"title":"Documentation","url":"/Databases/NoSQL-Databases/Druid/Documentation/","items":[]},{"title":"Others","url":"/Databases/NoSQL-Databases/Druid/Others/","items":[]},{"title":"Paper","url":"/Databases/NoSQL-Databases/Druid/Paper/","items":[]}]},{"title":"MongoDB","url":"/Databases/NoSQL-Databases/MongoDB/","items":[{"title":"Commands","url":"/Databases/NoSQL-Databases/MongoDB/Commands/","items":[]},{"title":"Data Types","url":"/Databases/NoSQL-Databases/MongoDB/Data-Types/","items":[]},{"title":"Indexes","url":"/Databases/NoSQL-Databases/MongoDB/Indexes/","items":[]},{"title":"Others","url":"/Databases/NoSQL-Databases/MongoDB/Others/","items":[]},{"title":"Overview","url":"/Databases/NoSQL-Databases/MongoDB/Overview/","items":[]},{"title":"pymongo","url":"/Databases/NoSQL-Databases/MongoDB/pymongo/","items":[]}]},{"title":"NoSQL Databases","url":"/Databases/NoSQL-Databases/NoSQL-Databases/","items":[]},{"title":"Redis","url":"/Databases/NoSQL-Databases/Redis/","items":[{"title":"Best Practices","url":"/Databases/NoSQL-Databases/Redis/Best-Practices/","items":[]},{"title":"Commands","url":"/Databases/NoSQL-Databases/Redis/Commands/","items":[]},{"title":"Documentation","url":"/Databases/NoSQL-Databases/Redis/Documentation/","items":[]},{"title":"Others","url":"/Databases/NoSQL-Databases/Redis/Others/","items":[]},{"title":"Redis Concepts","url":"/Databases/NoSQL-Databases/Redis/Redis-Concepts/","items":[]},{"title":"Redis Data Types","url":"/Databases/NoSQL-Databases/Redis/Redis-Data-Types/","items":[]},{"title":"Redis Eviction Policies","url":"/Databases/NoSQL-Databases/Redis/Redis-Eviction-Policies/","items":[]},{"title":"Redis Queues","url":"/Databases/NoSQL-Databases/Redis/Redis-Queues/","items":[]},{"title":"Redis Streams / PUBSUB","url":"/Databases/NoSQL-Databases/Redis/Redis-Streams---PUBSUB/","items":[]},{"title":"redis-py","url":"/Databases/NoSQL-Databases/Redis/redis-py/","items":[]}]}]},{"title":"Others","url":"","items":[{"title":"Course - Advanced Database Systems","url":"/Databases/Others/Course---Advanced-Database-Systems/","items":[]},{"title":"Course - AWS Certified Database - Specialty","url":"/Databases/Others/Course---AWS-Certified-Database---Specialty/","items":[]},{"title":"Data Lake","url":"/Databases/Others/Data-Lake/","items":[]},{"title":"Data Warehousing","url":"/Databases/Others/Data-Warehousing/","items":[{"title":"Architecture","url":"/Databases/Others/Data-Warehousing/Architecture/","items":[]},{"title":"Characteristics","url":"/Databases/Others/Data-Warehousing/Characteristics/","items":[]},{"title":"Concepts","url":"/Databases/Others/Data-Warehousing/Concepts/","items":[]},{"title":"Databases","url":"/Databases/Others/Data-Warehousing/Databases/","items":[]},{"title":"Others","url":"/Databases/Others/Data-Warehousing/Others/","items":[]},{"title":"Warehouse Schemas","url":"/Databases/Others/Data-Warehousing/Warehouse-Schemas/","items":[]}]},{"title":"Databases - Others","url":"/Databases/Others/Databases---Others/","items":[]},{"title":"ETL (Extract Transform Load)","url":"/Databases/Others/ETL-(Extract-Transform-Load)/","items":[]},{"title":"MemSQL","url":"/Databases/Others/MemSQL/","items":[{"title":"Intro","url":"/Databases/Others/MemSQL/Intro/","items":[]}]},{"title":"Technologies / Tools","url":"/Databases/Others/Technologies---Tools/","items":[]},{"title":"YugabyteDB","url":"/Databases/Others/YugabyteDB/","items":[]}]},{"title":"SQL-Databases","url":"","items":[{"title":"AWS Aurora","url":"/Databases/SQL-Databases/AWS-Aurora/","items":[{"title":"Aurora Documentation","url":"/Databases/SQL-Databases/AWS-Aurora/Aurora-Documentation/","items":[]},{"title":"Configurations / Optimizations / Best Practices","url":"/Databases/SQL-Databases/AWS-Aurora/Configurations---Optimizations---Best-Practices/","items":[]},{"title":"Others","url":"/Databases/SQL-Databases/AWS-Aurora/Others/","items":[]},{"title":"Storage","url":"/Databases/SQL-Databases/AWS-Aurora/Storage/","items":[]}]},{"title":"AWS Redshift","url":"/Databases/SQL-Databases/AWS-Redshift/","items":[{"title":"Architecture","url":"/Databases/SQL-Databases/AWS-Redshift/Architecture/","items":[]},{"title":"Deep dive / Best practices","url":"/Databases/SQL-Databases/AWS-Redshift/Deep-dive---Best-practices/","items":[]},{"title":"Documentation","url":"/Databases/SQL-Databases/AWS-Redshift/Documentation/","items":[]},{"title":"Others","url":"/Databases/SQL-Databases/AWS-Redshift/Others/","items":[]},{"title":"Pricing / Sizing","url":"/Databases/SQL-Databases/AWS-Redshift/Pricing---Sizing/","items":[]},{"title":"Redshift SQL Queries / Commands","url":"/Databases/SQL-Databases/AWS-Redshift/Redshift-SQL-Queries---Commands/","items":[]}]},{"title":"MySQL","url":"/Databases/SQL-Databases/MySQL/","items":[{"title":"11. MySQL Data Types","url":"/Databases/SQL-Databases/MySQL/11.-MySQL-Data-Types/","items":[]},{"title":"Connection Handling","url":"/Databases/SQL-Databases/MySQL/Connection-Handling/","items":[]},{"title":"Documentation","url":"/Databases/SQL-Databases/MySQL/Documentation/","items":[]},{"title":"Others","url":"/Databases/SQL-Databases/MySQL/Others/","items":[]},{"title":"Scaling / Optimizations","url":"/Databases/SQL-Databases/MySQL/Scaling---Optimizations/","items":[]},{"title":"SQL / MySQL Tools","url":"/Databases/SQL-Databases/MySQL/SQL---MySQL-Tools/","items":[]}]},{"title":"Normalization","url":"/Databases/SQL-Databases/Normalization/","items":[]},{"title":"Partitioning / Sharding","url":"/Databases/SQL-Databases/Partitioning---Sharding/","items":[]},{"title":"Postgres","url":"/Databases/SQL-Databases/Postgres/","items":[{"title":"Documentation","url":"/Databases/SQL-Databases/Postgres/Documentation/","items":[]}]},{"title":"RDBMS","url":"/Databases/SQL-Databases/RDBMS/","items":[]}]},{"title":"Time-Series-DB","url":"","items":[{"title":"InfluxDB","url":"/Databases/Time-Series-DB/InfluxDB/","items":[{"title":"Administration","url":"/Databases/Time-Series-DB/InfluxDB/Administration/","items":[]},{"title":"Commands / Influx Query Language (InfluxQL)","url":"/Databases/Time-Series-DB/InfluxDB/Commands---Influx-Query-Language-(InfluxQL)/","items":[]},{"title":"Concepts","url":"/Databases/Time-Series-DB/InfluxDB/Concepts/","items":[]},{"title":"Influx","url":"/Databases/Time-Series-DB/InfluxDB/Influx/","items":[]},{"title":"Kapacitor","url":"/Databases/Time-Series-DB/InfluxDB/Kapacitor/","items":[]},{"title":"Others","url":"/Databases/Time-Series-DB/InfluxDB/Others/","items":[]},{"title":"Tools","url":"/Databases/Time-Series-DB/InfluxDB/Tools/","items":[]},{"title":"Write Protocols","url":"/Databases/Time-Series-DB/InfluxDB/Write-Protocols/","items":[]}]},{"title":"Time Series Databases","url":"/Databases/Time-Series-DB/Time-Series-Databases/","items":[]},{"title":"TimeScaleDB","url":"/Databases/Time-Series-DB/TimeScaleDB/","items":[]}]}]},{"title":"Mathematics","url":"","items":[{"title":"Algebra","url":"","items":[{"title":"2.1 Functions","url":"/Mathematics/Algebra/2.1-Functions/","items":[]},{"title":"2.2 Complex Numbers","url":"/Mathematics/Algebra/2.2-Complex-Numbers/","items":[]},{"title":"2.7. Exponential & logarithms","url":"/Mathematics/Algebra/2.7.-Exponential-&-logarithms/","items":[]},{"title":"2.9. Series","url":"/Mathematics/Algebra/2.9.-Series/","items":[]},{"title":"Cheatsheet","url":"/Mathematics/Algebra/Cheatsheet/","items":[]},{"title":"Intro","url":"/Mathematics/Algebra/Intro/","items":[]},{"title":"Others","url":"/Mathematics/Algebra/Others/","items":[]},{"title":"Root","url":"/Mathematics/Algebra/Root/","items":[]},{"title":"Sets","url":"/Mathematics/Algebra/Sets/","items":[]}]},{"title":"Aptitude","url":"","items":[{"title":"Chinese Remainder Theorem","url":"/Mathematics/Aptitude/Chinese-Remainder-Theorem/","items":[]},{"title":"Cube Cutting","url":"/Mathematics/Aptitude/Cube-Cutting/","items":[]},{"title":"Distance Speed and Time","url":"/Mathematics/Aptitude/Distance-Speed-and-Time/","items":[]}]},{"title":"Calculus","url":"","items":[{"title":"Essence of Calculus - 3Blue1Brown","url":"/Mathematics/Calculus/Essence-of-Calculus---3Blue1Brown/","items":[]},{"title":"Functions","url":"/Mathematics/Calculus/Functions/","items":[]},{"title":"Gradient","url":"/Mathematics/Calculus/Gradient/","items":[]},{"title":"Intro","url":"/Mathematics/Calculus/Intro/","items":[]},{"title":"Others","url":"/Mathematics/Calculus/Others/","items":[]},{"title":"Product Rule for Derivatives","url":"/Mathematics/Calculus/Product-Rule-for-Derivatives/","items":[]},{"title":"Quotient Rule","url":"/Mathematics/Calculus/Quotient-Rule/","items":[]},{"title":"Tangent Line and the Derivative","url":"/Mathematics/Calculus/Tangent-Line-and-the-Derivative/","items":[]}]},{"title":"Combinatorics","url":"","items":[{"title":"Birthday Paradox","url":"/Mathematics/Combinatorics/Birthday-Paradox/","items":[]},{"title":"Conditional Probability","url":"/Mathematics/Combinatorics/Conditional-Probability/","items":[]},{"title":"Inclusion-Exclusion Principle","url":"/Mathematics/Combinatorics/Inclusion-Exclusion-Principle/","items":[]},{"title":"Intro","url":"/Mathematics/Combinatorics/Intro/","items":[]},{"title":"Permutation and Combination","url":"/Mathematics/Combinatorics/Permutation-and-Combination/","items":[]},{"title":"Pigeonhole Principle","url":"/Mathematics/Combinatorics/Pigeonhole-Principle/","items":[]},{"title":"Probability","url":"/Mathematics/Combinatorics/Probability/","items":[]}]},{"title":"General","url":"","items":[{"title":"Ackermann Function","url":"/Mathematics/General/Ackermann-Function/","items":[]},{"title":"Advanced Topics","url":"/Mathematics/General/Advanced-Topics/","items":[]},{"title":"Conjecture","url":"/Mathematics/General/Conjecture/","items":[]},{"title":"Discrete Mathematics","url":"/Mathematics/General/Discrete-Mathematics/","items":[]},{"title":"Fermat's Last Theorem","url":"/Mathematics/General/Fermat's-Last-Theorem/","items":[]},{"title":"Fermat's Little Theorem","url":"/Mathematics/General/Fermat's-Little-Theorem/","items":[]},{"title":"GCD","url":"/Mathematics/General/GCD/","items":[]},{"title":"Godel's Incompleteness Theorem","url":"/Mathematics/General/Godel's-Incompleteness-Theorem/","items":[]},{"title":"Golden Ratio - phi","url":"/Mathematics/General/Golden-Ratio---phi/","items":[]},{"title":"Greek Letters / Latin","url":"/Mathematics/General/Greek-Letters---Latin/","items":[]},{"title":"Handshaking Lemma","url":"/Mathematics/General/Handshaking-Lemma/","items":[]},{"title":"Logic","url":"/Mathematics/General/Logic/","items":[]},{"title":"Modulus / Modulo 10^9+7 (1000000007)","url":"/Mathematics/General/Modulus---Modulo-10^9+7-(1000000007)/","items":[]},{"title":"Numbers","url":"/Mathematics/General/Numbers/","items":[]},{"title":"Others","url":"/Mathematics/General/Others/","items":[]},{"title":"Outline","url":"/Mathematics/General/Outline/","items":[]},{"title":"Pie","url":"/Mathematics/General/Pie/","items":[]},{"title":"Properties","url":"/Mathematics/General/Properties/","items":[]}]},{"title":"Geometry","url":"","items":[{"title":"Analytic Geometry","url":"/Mathematics/Geometry/Analytic-Geometry/","items":[]},{"title":"Circles","url":"/Mathematics/Geometry/Circles/","items":[]},{"title":"Congruence","url":"/Mathematics/Geometry/Congruence/","items":[]},{"title":"Geometry Foundations","url":"/Mathematics/Geometry/Geometry-Foundations/","items":[]},{"title":"Others","url":"/Mathematics/Geometry/Others/","items":[]},{"title":"Right Triangles and Geometry","url":"/Mathematics/Geometry/Right-Triangles-and-Geometry/","items":[]},{"title":"Similarity","url":"/Mathematics/Geometry/Similarity/","items":[]},{"title":"Solid Geometry","url":"/Mathematics/Geometry/Solid-Geometry/","items":[]},{"title":"Transformations","url":"/Mathematics/Geometry/Transformations/","items":[]}]},{"title":"Linear-Algebra","url":"","items":[{"title":"3Blue1Brown","url":"/Mathematics/Linear-Algebra/3Blue1Brown/","items":[]},{"title":"Alternate Coordinate systems (bases)","url":"/Mathematics/Linear-Algebra/Alternate-Coordinate-systems-(bases)/","items":[]},{"title":"Cheetsheet","url":"/Mathematics/Linear-Algebra/Cheetsheet/","items":[]},{"title":"Matrix Transformations","url":"/Mathematics/Linear-Algebra/Matrix-Transformations/","items":[]},{"title":"Others","url":"/Mathematics/Linear-Algebra/Others/","items":[]},{"title":"Vectors and Spaces","url":"/Mathematics/Linear-Algebra/Vectors-and-Spaces/","items":[]}]},{"title":"Precalculus","url":"","items":[{"title":"Intro","url":"/Mathematics/Precalculus/Intro/","items":[]}]},{"title":"Probability","url":"","items":[{"title":"365 DS - Probability","url":"/Mathematics/Probability/365-DS---Probability/","items":[]},{"title":"Binomial Random Variables","url":"/Mathematics/Probability/Binomial-Random-Variables/","items":[]},{"title":"Central Limit Theorem","url":"/Mathematics/Probability/Central-Limit-Theorem/","items":[]},{"title":"Cheatsheet","url":"/Mathematics/Probability/Cheatsheet/","items":[]},{"title":"Intro","url":"/Mathematics/Probability/Intro/","items":[]},{"title":"Intro - Syllabus","url":"/Mathematics/Probability/Intro---Syllabus/","items":[{"title":"1. Probability Models and Axioms","url":"/Mathematics/Probability/Intro---Syllabus/1.-Probability-Models-and-Axioms/","items":[]},{"title":"1.1 Set, Sequences, Limits and Series, (un)countable sets","url":"/Mathematics/Probability/Intro---Syllabus/1.1-Set,-Sequences,-Limits-and-Series,-(un)countable-sets/","items":[]},{"title":"10. Conditioning on a random variable; Independence; Bayes' rule","url":"/Mathematics/Probability/Intro---Syllabus/10.-Conditioning-on-a-random-variable;-Independence;-Bayes'-rule/","items":[]},{"title":"11. Derived Distributions","url":"/Mathematics/Probability/Intro---Syllabus/11.-Derived-Distributions/","items":[]},{"title":"12. Sums of independent r.v.'s; Covariance and Correlation","url":"/Mathematics/Probability/Intro---Syllabus/12.-Sums-of-independent-r.v.'s;-Covariance-and-Correlation/","items":[]},{"title":"13. Conditional expectation and variance revisited","url":"/Mathematics/Probability/Intro---Syllabus/13.-Conditional-expectation-and-variance-revisited/","items":[]},{"title":"14. Intro to Bayesian Inference","url":"/Mathematics/Probability/Intro---Syllabus/14.-Intro-to-Bayesian-Inference/","items":[]},{"title":"2. Conditioning and Independence","url":"/Mathematics/Probability/Intro---Syllabus/2.-Conditioning-and-Independence/","items":[]},{"title":"3. Independence","url":"/Mathematics/Probability/Intro---Syllabus/3.-Independence/","items":[]},{"title":"4. Counting","url":"/Mathematics/Probability/Intro---Syllabus/4.-Counting/","items":[]},{"title":"5. Probability Mass Functions and Expectations","url":"/Mathematics/Probability/Intro---Syllabus/5.-Probability-Mass-Functions-and-Expectations/","items":[]},{"title":"6. Variance; Conditioning of an event; Multiple r.v.'s","url":"/Mathematics/Probability/Intro---Syllabus/6.-Variance;-Conditioning-of-an-event;-Multiple-r.v.'s/","items":[]},{"title":"7. Conditioning on a rv; Independence of r.v.'s","url":"/Mathematics/Probability/Intro---Syllabus/7.-Conditioning-on-a-rv;-Independence-of-r.v.'s/","items":[]},{"title":"8. Probability density functions","url":"/Mathematics/Probability/Intro---Syllabus/8.-Probability-density-functions/","items":[]},{"title":"9. Conditioning on an event; Multiple continuous r.v.'s","url":"/Mathematics/Probability/Intro---Syllabus/9.-Conditioning-on-an-event;-Multiple-continuous-r.v.'s/","items":[]},{"title":"Additional Theoretical Material","url":"/Mathematics/Probability/Intro---Syllabus/Additional-Theoretical-Material-1/","items":[]},{"title":"Additional Theoretical Material","url":"/Mathematics/Probability/Intro---Syllabus/Additional-Theoretical-Material/","items":[]},{"title":"Summary - Unit 4","url":"/Mathematics/Probability/Intro---Syllabus/Summary---Unit-4/","items":[]},{"title":"Summary - Unit 5","url":"/Mathematics/Probability/Intro---Syllabus/Summary---Unit-5/","items":[]},{"title":"Summary - Unit 6","url":"/Mathematics/Probability/Intro---Syllabus/Summary---Unit-6/","items":[]},{"title":"Unit 1 - Solved Problems","url":"/Mathematics/Probability/Intro---Syllabus/Unit-1---Solved-Problems/","items":[]},{"title":"Unit 2 - Solved Problems","url":"/Mathematics/Probability/Intro---Syllabus/Unit-2---Solved-Problems/","items":[]},{"title":"Unit 3 - Solved Problems","url":"/Mathematics/Probability/Intro---Syllabus/Unit-3---Solved-Problems/","items":[]},{"title":"Unit 4 - Solved Problems","url":"/Mathematics/Probability/Intro---Syllabus/Unit-4---Solved-Problems/","items":[]}]},{"title":"Monte Carlo Simulation","url":"/Mathematics/Probability/Monte-Carlo-Simulation/","items":[]},{"title":"Normal Distributions","url":"/Mathematics/Probability/Normal-Distributions/","items":[]},{"title":"Others","url":"/Mathematics/Probability/Others/","items":[]},{"title":"Probability Distribution","url":"/Mathematics/Probability/Probability-Distribution/","items":[]},{"title":"Random Variables","url":"/Mathematics/Probability/Random-Variables/","items":[]}]},{"title":"Statistics","url":"","items":[{"title":"Bivariate Analysis","url":"/Mathematics/Statistics/Bivariate-Analysis/","items":[]},{"title":"Confidence Intervals","url":"/Mathematics/Statistics/Confidence-Intervals/","items":[]},{"title":"Correlation and Covariance","url":"/Mathematics/Statistics/Correlation-and-Covariance/","items":[]},{"title":"Crash Course Statistics","url":"/Mathematics/Statistics/Crash-Course-Statistics/","items":[]},{"title":"Descriptive Statistics","url":"/Mathematics/Statistics/Descriptive-Statistics/","items":[]},{"title":"Discriminant Analysis","url":"/Mathematics/Statistics/Discriminant-Analysis/","items":[]},{"title":"Estimation Statistics","url":"/Mathematics/Statistics/Estimation-Statistics/","items":[]},{"title":"Glossary","url":"/Mathematics/Statistics/Glossary/","items":[]},{"title":"Hypothesis Testing","url":"/Mathematics/Statistics/Hypothesis-Testing/","items":[]},{"title":"Inferential Statistics","url":"/Mathematics/Statistics/Inferential-Statistics/","items":[]},{"title":"Intro","url":"/Mathematics/Statistics/Intro/","items":[]},{"title":"Nonparametric Statistics","url":"/Mathematics/Statistics/Nonparametric-Statistics/","items":[]},{"title":"Other Statistics","url":"/Mathematics/Statistics/Other-Statistics/","items":[]},{"title":"Sampling","url":"/Mathematics/Statistics/Sampling/","items":[]}]}]},{"title":"wiki","url":"/","items":[]}]}],"tagsGroups":[],"latestPosts":[{"fields":{"slug":"/Databases/SQL-Databases/AWS-Aurora/Configurations---Optimizations---Best-Practices/","title":"Configurations / Optimizations / Best Practices","lastUpdatedAt":"2022-12-14T08:49:58.000Z","lastUpdated":"12/14/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Computer-Science/Networking/Others/gRPC/Commands/","title":"Commands","lastUpdatedAt":"2022-12-14T07:08:50.000Z","lastUpdated":"12/14/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Databases/SQL-Databases/AWS-Redshift/Pricing---Sizing/","title":"Pricing / Sizing","lastUpdatedAt":"2022-12-14T07:03:59.000Z","lastUpdated":"12/14/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Data-Structures/Others/LSM-(Log-Structured-Merge-Trees)/","title":"LSM (Log Structured Merge Trees)","lastUpdatedAt":"2022-12-14T06:59:27.000Z","lastUpdated":"12/14/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Databases/NoSQL-Databases/Druid/Cheatsheet/","title":"Cheatsheet","lastUpdatedAt":"2022-12-14T06:59:27.000Z","lastUpdated":"12/14/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Databases/NoSQL-Databases/Redis/Commands/","title":"Commands","lastUpdatedAt":"2022-12-14T06:59:27.000Z","lastUpdated":"12/14/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Computer-Science/Courses/Intro-to-Microsoft-Excel---Google-Sheets/","title":"Intro to Microsoft Excel / Google Sheets","lastUpdatedAt":"2022-12-14T06:39:47.000Z","lastUpdated":"12/14/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Computer-Science/Courses/Mordern-Algorithm-Design/","title":"Mordern Algorithm Design","lastUpdatedAt":"2022-12-14T06:39:47.000Z","lastUpdated":"12/14/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Computer-Science/Courses/Nutanix-Hybrid-Cloud/","title":"Nutanix Hybrid Cloud","lastUpdatedAt":"2022-12-14T06:39:47.000Z","lastUpdated":"12/14/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Computer-Science/Courses/SE-Radio/","title":"SE Radio","lastUpdatedAt":"2022-12-14T06:39:47.000Z","lastUpdated":"12/14/2022"},"frontmatter":{"draft":false,"tags":[]}}]}},
    "staticQueryHashes": ["2230547434","2320115945","3495835395","451533639"]}